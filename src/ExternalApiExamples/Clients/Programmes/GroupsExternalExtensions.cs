// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GroupsExternal.
    /// </summary>
    public static partial class GroupsExternalExtensions
    {
            /// <summary>
            /// GroupsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupsExternalRequest'>
            /// </param>
            public static IList<GroupsExternalResponse> Post(this IGroupsExternal operations, GroupsExternalRequest groupsExternalRequest = default(GroupsExternalRequest))
            {
                return operations.PostAsync(groupsExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// GroupsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='groupsExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<GroupsExternalResponse>> PostAsync(this IGroupsExternal operations, GroupsExternalRequest groupsExternalRequest = default(GroupsExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostWithHttpMessagesAsync(groupsExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
