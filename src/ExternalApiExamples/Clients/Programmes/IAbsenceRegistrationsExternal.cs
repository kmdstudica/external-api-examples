// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// AbsenceRegistrationsExternal operations.
    /// </summary>
    public partial interface IAbsenceRegistrationsExternal
    {
        /// <param name='schoolCode'>
        /// The school code for which to get data.
        /// </param>
        /// <param name='pageNumber'>
        /// The page number to return.
        /// </param>
        /// <param name='pageSize'>
        /// Number of objects per page.
        /// </param>
        /// <param name='inlineCount'>
        /// A flag indicating if include total number of items.
        /// </param>
        /// <param name='studentId'>
        /// Absent student.
        /// </param>
        /// <param name='lessonId'>
        /// Lesson of absence.
        /// </param>
        /// <param name='dateFrom'>
        /// Beginning of the range for absence date. The `DateFrom` parameter
        /// determines date to get absence data from, as well as the school
        /// year period
        /// </param>
        /// <param name='dateTo'>
        /// End of the range for absence date.
        /// The `DateTo` parameter must be within the same school year as
        /// `DateFrom`
        /// </param>
        /// <param name='onlyAbsenceReports'>
        /// Only retrieve reports of absence or partial absence,
        /// defaults to false (retrieve everything)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PagedResponseAbsenceRegistrationExternalResponse>> GetWithHttpMessagesAsync(string schoolCode, int pageNumber, int pageSize, bool inlineCount, System.Guid? studentId = default(System.Guid?), System.Guid? lessonId = default(System.Guid?), System.DateTime? dateFrom = default(System.DateTime?), System.DateTime? dateTo = default(System.DateTime?), bool? onlyAbsenceReports = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
