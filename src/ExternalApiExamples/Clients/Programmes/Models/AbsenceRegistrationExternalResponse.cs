// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// AbsenceRegistrationExternalResponse
    /// </summary>
    /// <remarks>
    /// The model of absence.
    /// </remarks>
    public partial class AbsenceRegistrationExternalResponse
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AbsenceRegistrationExternalResponse class.
        /// </summary>
        public AbsenceRegistrationExternalResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AbsenceRegistrationExternalResponse class.
        /// </summary>
        /// <param name="studentId">Absent student id.</param>
        /// <param name="lessonId">Lesson id.</param>
        /// <param name="absenceDate">Date of absence.</param>
        /// <param name="minutes">The length of the absence in minutes.</param>
        /// <param name="approved">Was absence approved.</param>
        /// <param name="status">Type of absence. Possible values include:
        /// 'Present', 'Absent', 'PartialAbsence'</param>
        public AbsenceRegistrationExternalResponse(System.Guid studentId, System.Guid lessonId, System.DateTime absenceDate, int minutes, bool approved, string status)
        {
            StudentId = studentId;
            LessonId = lessonId;
            AbsenceDate = absenceDate;
            Minutes = minutes;
            Approved = approved;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets absent student id.
        /// </summary>
        [JsonProperty(PropertyName = "studentId")]
        public System.Guid StudentId { get; set; }

        /// <summary>
        /// Gets or sets lesson id.
        /// </summary>
        [JsonProperty(PropertyName = "lessonId")]
        public System.Guid LessonId { get; set; }

        /// <summary>
        /// Gets or sets date of absence.
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "absenceDate")]
        public System.DateTime AbsenceDate { get; set; }

        /// <summary>
        /// Gets or sets the length of the absence in minutes.
        /// </summary>
        [JsonProperty(PropertyName = "minutes")]
        public int Minutes { get; set; }

        /// <summary>
        /// Gets or sets was absence approved.
        /// </summary>
        [JsonProperty(PropertyName = "approved")]
        public bool Approved { get; set; }

        /// <summary>
        /// Gets or sets type of absence. Possible values include: 'Present',
        /// 'Absent', 'PartialAbsence'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
        }
    }
}
