// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// BridgingCourseStudentExternalResponse
    /// </summary>
    /// <remarks>
    /// Model of the student.
    /// </remarks>
    public partial class BridgingCourseStudentExternalResponse
    {
        /// <summary>
        /// Initializes a new instance of the
        /// BridgingCourseStudentExternalResponse class.
        /// </summary>
        public BridgingCourseStudentExternalResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// BridgingCourseStudentExternalResponse class.
        /// </summary>
        /// <param name="id">Student's identifier.</param>
        /// <param name="civilRegistrationNumber">String</param>
        /// <param name="protectedNameAndAddress">Boolean</param>
        /// <param name="bridgingcourseId">Identifier of the Bridging Course
        /// the student is linked to</param>
        /// <param name="educationVersion">Int32</param>
        /// <param name="givenName">String</param>
        /// <param name="surname">String</param>
        /// <param name="protectedGivenName">String</param>
        /// <param name="protectedSurname">String</param>
        /// <param name="addressLine">String</param>
        /// <param name="postalCode">String</param>
        /// <param name="phone">String</param>
        /// <param name="mobile">String</param>
        /// <param name="email">String</param>
        /// <param name="dsDepartmentNumber">String</param>
        /// <param name="education">String</param>
        /// <param name="insertedAt">When was the bridging course
        /// created</param>
        /// <param name="updatedAt">Last update of information</param>
        public BridgingCourseStudentExternalResponse(System.Guid id, string civilRegistrationNumber, bool protectedNameAndAddress, System.Guid bridgingcourseId, int educationVersion, string givenName = default(string), string surname = default(string), string protectedGivenName = default(string), string protectedSurname = default(string), string addressLine = default(string), string postalCode = default(string), string phone = default(string), string mobile = default(string), string email = default(string), string dsDepartmentNumber = default(string), string education = default(string), System.DateTime? insertedAt = default(System.DateTime?), System.DateTime? updatedAt = default(System.DateTime?))
        {
            Id = id;
            CivilRegistrationNumber = civilRegistrationNumber;
            GivenName = givenName;
            Surname = surname;
            ProtectedGivenName = protectedGivenName;
            ProtectedSurname = protectedSurname;
            AddressLine = addressLine;
            PostalCode = postalCode;
            ProtectedNameAndAddress = protectedNameAndAddress;
            Phone = phone;
            Mobile = mobile;
            Email = email;
            BridgingcourseId = bridgingcourseId;
            DsDepartmentNumber = dsDepartmentNumber;
            Education = education;
            EducationVersion = educationVersion;
            InsertedAt = insertedAt;
            UpdatedAt = updatedAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets student's identifier.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's civil registration (CPR) number.
        /// </remarks>
        [JsonProperty(PropertyName = "civilRegistrationNumber")]
        public string CivilRegistrationNumber { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's given name.
        /// </remarks>
        [JsonProperty(PropertyName = "givenName")]
        public string GivenName { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's surname.
        /// </remarks>
        [JsonProperty(PropertyName = "surname")]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Protected given name from national registry
        /// </remarks>
        [JsonProperty(PropertyName = "protectedGivenName")]
        public string ProtectedGivenName { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Protected surname from national registry
        /// </remarks>
        [JsonProperty(PropertyName = "protectedSurname")]
        public string ProtectedSurname { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Full address including street, house-nr letter, etc. where the
        /// student lives.
        /// </remarks>
        [JsonProperty(PropertyName = "addressLine")]
        public string AddressLine { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The matching postal code for the city.
        /// </remarks>
        [JsonProperty(PropertyName = "postalCode")]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether the name and address of the applicant are protected.
        /// </remarks>
        [JsonProperty(PropertyName = "protectedNameAndAddress")]
        public bool ProtectedNameAndAddress { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The student's phone number.
        /// </remarks>
        [JsonProperty(PropertyName = "phone")]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The student's phone number.
        /// </remarks>
        [JsonProperty(PropertyName = "mobile")]
        public string Mobile { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's e-mail address.
        /// </remarks>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets identifier of the Bridging Course the student is
        /// linked to
        /// </summary>
        [JsonProperty(PropertyName = "bridgingcourseId")]
        public System.Guid BridgingcourseId { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The DS department number of the bridging course
        /// which the bridging course student is on.
        /// </remarks>
        [JsonProperty(PropertyName = "dsDepartmentNumber")]
        public string DsDepartmentNumber { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The name of the education.
        /// </remarks>
        [JsonProperty(PropertyName = "education")]
        public string Education { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// The version of the education.
        /// </remarks>
        [JsonProperty(PropertyName = "educationVersion")]
        public int EducationVersion { get; set; }

        /// <summary>
        /// Gets or sets when was the bridging course created
        /// </summary>
        [JsonProperty(PropertyName = "insertedAt")]
        public System.DateTime? InsertedAt { get; set; }

        /// <summary>
        /// Gets or sets last update of information
        /// </summary>
        [JsonProperty(PropertyName = "updatedAt")]
        public System.DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CivilRegistrationNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CivilRegistrationNumber");
            }
            if (CivilRegistrationNumber != null)
            {
                if (CivilRegistrationNumber.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CivilRegistrationNumber", 1);
                }
            }
        }
    }
}
