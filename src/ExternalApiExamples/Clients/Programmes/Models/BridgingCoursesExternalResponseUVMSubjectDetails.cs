// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// BridgingCoursesExternalResponse_UVMSubjectDetails
    /// </summary>
    public partial class BridgingCoursesExternalResponseUVMSubjectDetails
    {
        /// <summary>
        /// Initializes a new instance of the
        /// BridgingCoursesExternalResponseUVMSubjectDetails class.
        /// </summary>
        public BridgingCoursesExternalResponseUVMSubjectDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// BridgingCoursesExternalResponseUVMSubjectDetails class.
        /// </summary>
        /// <param name="version">Int32</param>
        /// <param name="subject">String</param>
        /// <param name="description">String</param>
        /// <param name="speciality">String</param>
        public BridgingCoursesExternalResponseUVMSubjectDetails(int version, string subject = default(string), string description = default(string), string speciality = default(string))
        {
            Subject = subject;
            Description = description;
            Version = version;
            Speciality = speciality;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Subject code (Fagnummer) from UMO
        /// </remarks>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// UMO subject description
        /// </remarks>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// UMO Version of this subject
        /// </remarks>
        [JsonProperty(PropertyName = "version")]
        public int Version { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Speciality of this subject
        /// </remarks>
        [JsonProperty(PropertyName = "speciality")]
        public string Speciality { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
