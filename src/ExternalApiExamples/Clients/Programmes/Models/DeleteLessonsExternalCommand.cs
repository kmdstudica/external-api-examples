// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// DeleteLessonsExternalCommand
    /// </summary>
    /// <remarks>
    /// Deletes existing lessons.
    /// </remarks>
    public partial class DeleteLessonsExternalCommand
    {
        /// <summary>
        /// Initializes a new instance of the DeleteLessonsExternalCommand
        /// class.
        /// </summary>
        public DeleteLessonsExternalCommand()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeleteLessonsExternalCommand
        /// class.
        /// </summary>
        /// <param name="ids">Identifiers of the lessons.</param>
        /// <param name="subjectCourseId">Identifier of the subject course this
        /// lesson is deleted from.</param>
        /// <param name="schoolCode">String</param>
        public DeleteLessonsExternalCommand(IList<System.Guid> ids, System.Guid subjectCourseId, string schoolCode = default(string))
        {
            Ids = ids;
            SubjectCourseId = subjectCourseId;
            SchoolCode = schoolCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets identifiers of the lessons.
        /// </summary>
        [JsonProperty(PropertyName = "ids")]
        public IList<System.Guid> Ids { get; set; }

        /// <summary>
        /// Gets or sets identifier of the subject course this lesson is
        /// deleted from.
        /// </summary>
        [JsonProperty(PropertyName = "subjectCourseId")]
        public System.Guid SubjectCourseId { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The school code for which command is performed.
        /// </remarks>
        [JsonProperty(PropertyName = "schoolCode")]
        public string SchoolCode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Ids == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Ids");
            }
        }
    }
}
