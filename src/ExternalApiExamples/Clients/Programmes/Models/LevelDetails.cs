// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// LevelDetails
    /// </summary>
    public partial class LevelDetails
    {
        /// <summary>
        /// Initializes a new instance of the LevelDetails class.
        /// </summary>
        public LevelDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LevelDetails class.
        /// </summary>
        /// <param name="levelId">Guid</param>
        /// <param name="level">String</param>
        /// <param name="description">String</param>
        /// <param name="levelType">String</param>
        public LevelDetails(System.Guid levelId, string level = default(string), string description = default(string), string levelType = default(string))
        {
            LevelId = levelId;
            Level = level;
            Description = description;
            LevelType = levelType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Unique identification of the level.
        /// </remarks>
        [JsonProperty(PropertyName = "levelId")]
        public System.Guid LevelId { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The level indicator,
        /// e.g. A, B, 1, 2, -.
        /// </remarks>
        [JsonProperty(PropertyName = "level")]
        public string Level { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Description of the level,
        /// e.g. A, Begynder, Niveau 1, Uden niveau.
        /// </remarks>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The type of the level.
        /// TEGN = Characters, TAL = Numbers,
        /// ERHVERV, FGU almen, FGU-tema, Delm√•l.
        /// </remarks>
        [JsonProperty(PropertyName = "levelType")]
        public string LevelType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
