// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// RegisterAbsenceRegistrationDto
    /// </summary>
    public partial class RegisterAbsenceRegistrationDto
    {
        /// <summary>
        /// Initializes a new instance of the RegisterAbsenceRegistrationDto
        /// class.
        /// </summary>
        public RegisterAbsenceRegistrationDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RegisterAbsenceRegistrationDto
        /// class.
        /// </summary>
        /// <param name="studentId">Guid</param>
        /// <param name="status">AbsenceRegistrationStatus</param>
        /// <param name="minutes">Int32</param>
        /// <param name="approved">Boolean</param>
        /// <param name="comment">String</param>
        public RegisterAbsenceRegistrationDto(System.Guid studentId, string status, int minutes, bool approved, string comment = default(string))
        {
            StudentId = studentId;
            Status = status;
            Minutes = minutes;
            Approved = approved;
            Comment = comment;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// The student to register absence for.
        /// </remarks>
        [JsonProperty(PropertyName = "studentId")]
        public System.Guid StudentId { get; set; }

        /// <summary>
        /// Gets or sets absenceRegistrationStatus
        /// </summary>
        /// <remarks>
        /// Status of the absence registration:
        /// 0 = Present
        /// 1 = Absent
        /// 2 = Partially absent. Possible values include: 'Present', 'Absent',
        /// 'PartialAbsence', 'NotRegistered'
        /// </remarks>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// How many minutes the student was absent for.
        /// Must be 0 if Status is not partially absent.
        /// </remarks>
        [JsonProperty(PropertyName = "minutes")]
        public int Minutes { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether the absence was approved.
        /// </remarks>
        [JsonProperty(PropertyName = "approved")]
        public bool Approved { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Educator's or optionally Administrative employee's comment
        /// regarding the absence.
        /// </remarks>
        [JsonProperty(PropertyName = "comment")]
        public string Comment { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
        }
    }
}
