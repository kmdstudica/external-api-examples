// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// SchoolCourse_CountingPeriodDto
    /// </summary>
    public partial class SchoolCourseCountingPeriodDto
    {
        /// <summary>
        /// Initializes a new instance of the SchoolCourseCountingPeriodDto
        /// class.
        /// </summary>
        public SchoolCourseCountingPeriodDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SchoolCourseCountingPeriodDto
        /// class.
        /// </summary>
        /// <param name="number">Int32</param>
        /// <param name="startDate">Date</param>
        /// <param name="endDate">Date</param>
        /// <param name="countingDate">Date</param>
        /// <param name="duration">Decimal</param>
        public SchoolCourseCountingPeriodDto(int number, System.DateTime startDate, System.DateTime endDate, System.DateTime countingDate, double duration)
        {
            Number = number;
            StartDate = startDate;
            EndDate = endDate;
            CountingDate = countingDate;
            Duration = duration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        [JsonProperty(PropertyName = "number")]
        public int Number { get; set; }

        /// <summary>
        /// Gets or sets date
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "startDate")]
        public System.DateTime StartDate { get; set; }

        /// <summary>
        /// Gets or sets date
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "endDate")]
        public System.DateTime EndDate { get; set; }

        /// <summary>
        /// Gets or sets date
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "countingDate")]
        public System.DateTime CountingDate { get; set; }

        /// <summary>
        /// Gets or sets decimal
        /// </summary>
        [JsonProperty(PropertyName = "duration")]
        public double Duration { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
