// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// SchoolCourseExternalResponse
    /// </summary>
    /// <remarks>
    /// Details of a school course
    /// </remarks>
    public partial class SchoolCourseExternalResponse
    {
        /// <summary>
        /// Initializes a new instance of the SchoolCourseExternalResponse
        /// class.
        /// </summary>
        public SchoolCourseExternalResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SchoolCourseExternalResponse
        /// class.
        /// </summary>
        /// <param name="schoolCourseId">Guid</param>
        /// <param name="startDate">Date</param>
        /// <param name="endDate">Date</param>
        /// <param name="dayCalendarId">Guid</param>
        /// <param name="departmentId">Guid</param>
        /// <param name="areaOfEducationId">Guid</param>
        /// <param name="areaOfResponsibilityId">Guid</param>
        /// <param name="name">String</param>
        /// <param name="uvmDepartmentNumber">String</param>
        /// <param name="dsDepartmentNumber">String</param>
        /// <param name="schoolPeriod">School period of the school
        /// course</param>
        /// <param name="studentIds">List of ids of students that are assigned
        /// to the school course</param>
        /// <param name="countingPeriods">List of activity counting periods for
        /// the school course</param>
        public SchoolCourseExternalResponse(System.Guid schoolCourseId, System.DateTime startDate, System.DateTime endDate, System.Guid dayCalendarId, System.Guid departmentId, System.Guid areaOfEducationId, System.Guid areaOfResponsibilityId, string name = default(string), string uvmDepartmentNumber = default(string), string dsDepartmentNumber = default(string), SchoolCourseExternalResponseSchoolPeriod schoolPeriod = default(SchoolCourseExternalResponseSchoolPeriod), IList<System.Guid> studentIds = default(IList<System.Guid>), IList<SchoolCourseCountingPeriodDto> countingPeriods = default(IList<SchoolCourseCountingPeriodDto>))
        {
            SchoolCourseId = schoolCourseId;
            Name = name;
            StartDate = startDate;
            EndDate = endDate;
            UvmDepartmentNumber = uvmDepartmentNumber;
            DsDepartmentNumber = dsDepartmentNumber;
            SchoolPeriod = schoolPeriod;
            DayCalendarId = dayCalendarId;
            DepartmentId = departmentId;
            AreaOfEducationId = areaOfEducationId;
            AreaOfResponsibilityId = areaOfResponsibilityId;
            StudentIds = studentIds;
            CountingPeriods = countingPeriods;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Id of the school course
        /// </remarks>
        [JsonProperty(PropertyName = "schoolCourseId")]
        public System.Guid SchoolCourseId { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Name of the school course
        /// </remarks>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets date
        /// </summary>
        /// <remarks>
        /// School course start date
        /// </remarks>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "startDate")]
        public System.DateTime StartDate { get; set; }

        /// <summary>
        /// Gets or sets date
        /// </summary>
        /// <remarks>
        /// School course end date
        /// </remarks>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "endDate")]
        public System.DateTime EndDate { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// UVM department number on the school course
        /// </remarks>
        [JsonProperty(PropertyName = "uvmDepartmentNumber")]
        public string UvmDepartmentNumber { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// DS department number on the school course
        /// </remarks>
        [JsonProperty(PropertyName = "dsDepartmentNumber")]
        public string DsDepartmentNumber { get; set; }

        /// <summary>
        /// Gets or sets school period of the school course
        /// </summary>
        [JsonProperty(PropertyName = "schoolPeriod")]
        public SchoolCourseExternalResponseSchoolPeriod SchoolPeriod { get; set; }

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Id of the day calendar assigned to the school course
        /// </remarks>
        [JsonProperty(PropertyName = "dayCalendarId")]
        public System.Guid DayCalendarId { get; set; }

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Id of the Studica department the school course is assigned to
        /// </remarks>
        [JsonProperty(PropertyName = "departmentId")]
        public System.Guid DepartmentId { get; set; }

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Id of the area of education the school course is assigned to
        /// </remarks>
        [JsonProperty(PropertyName = "areaOfEducationId")]
        public System.Guid AreaOfEducationId { get; set; }

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Id of the area of responsibility the school course is assigned to
        /// </remarks>
        [JsonProperty(PropertyName = "areaOfResponsibilityId")]
        public System.Guid AreaOfResponsibilityId { get; set; }

        /// <summary>
        /// Gets or sets list of ids of students that are assigned to the
        /// school course
        /// </summary>
        [JsonProperty(PropertyName = "studentIds")]
        public IList<System.Guid> StudentIds { get; set; }

        /// <summary>
        /// Gets or sets list of activity counting periods for the school
        /// course
        /// </summary>
        [JsonProperty(PropertyName = "countingPeriods")]
        public IList<SchoolCourseCountingPeriodDto> CountingPeriods { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CountingPeriods != null)
            {
                foreach (var element in CountingPeriods)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
