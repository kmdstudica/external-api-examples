// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// StudentSubjectCoursesExternalResponse
    /// </summary>
    /// <remarks>
    /// Model of a subject course assigned to a student
    /// </remarks>
    public partial class StudentSubjectCoursesExternalResponse
    {
        /// <summary>
        /// Initializes a new instance of the
        /// StudentSubjectCoursesExternalResponse class.
        /// </summary>
        public StudentSubjectCoursesExternalResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// StudentSubjectCoursesExternalResponse class.
        /// </summary>
        /// <param name="studentId">Guid</param>
        /// <param name="subjectCourseId">Guid</param>
        /// <param name="studentParticipationStartDate">Start date for student
        /// participating in the course</param>
        /// <param name="studentParticipationEndDate">End date for student
        /// participating in the course</param>
        /// <param name="subjectCourseName">String</param>
        /// <param name="subjectCourseDesignation">String</param>
        /// <param name="subjectCourseMinimumNumberOfSessions">The minimum
        /// number of sessions expected to be taught on this subject course
        /// main group</param>
        public StudentSubjectCoursesExternalResponse(System.Guid studentId, System.Guid subjectCourseId, System.DateTime? studentParticipationStartDate = default(System.DateTime?), System.DateTime? studentParticipationEndDate = default(System.DateTime?), string subjectCourseName = default(string), string subjectCourseDesignation = default(string), int? subjectCourseMinimumNumberOfSessions = default(int?))
        {
            StudentId = studentId;
            StudentParticipationStartDate = studentParticipationStartDate;
            StudentParticipationEndDate = studentParticipationEndDate;
            SubjectCourseId = subjectCourseId;
            SubjectCourseName = subjectCourseName;
            SubjectCourseDesignation = subjectCourseDesignation;
            SubjectCourseMinimumNumberOfSessions = subjectCourseMinimumNumberOfSessions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Id of the student.
        /// </remarks>
        [JsonProperty(PropertyName = "studentId")]
        public System.Guid StudentId { get; set; }

        /// <summary>
        /// Gets or sets start date for student participating in the course
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "studentParticipationStartDate")]
        public System.DateTime? StudentParticipationStartDate { get; set; }

        /// <summary>
        /// Gets or sets end date for student participating in the course
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "studentParticipationEndDate")]
        public System.DateTime? StudentParticipationEndDate { get; set; }

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Id of the subject course
        /// </remarks>
        [JsonProperty(PropertyName = "subjectCourseId")]
        public System.Guid SubjectCourseId { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Name of the subject course
        /// </remarks>
        [JsonProperty(PropertyName = "subjectCourseName")]
        public string SubjectCourseName { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Designation of the subject course
        /// </remarks>
        [JsonProperty(PropertyName = "subjectCourseDesignation")]
        public string SubjectCourseDesignation { get; set; }

        /// <summary>
        /// Gets or sets the minimum number of sessions expected to be taught
        /// on this subject course main group
        /// </summary>
        [JsonProperty(PropertyName = "subjectCourseMinimumNumberOfSessions")]
        public int? SubjectCourseMinimumNumberOfSessions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
