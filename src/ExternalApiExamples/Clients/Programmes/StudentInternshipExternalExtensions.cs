// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for StudentInternshipExternal.
    /// </summary>
    public static partial class StudentInternshipExternalExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='periodFrom'>
            /// Beginning of the range for start date of the students' internships.
            /// </param>
            /// <param name='periodTo'>
            /// End of the range for start date of the students' internships.
            /// </param>
            /// <param name='schoolCode'>
            /// The school code for which to get data.
            /// </param>
            /// <param name='xSelectedSchoolCode'>
            /// Selected school code, used when multiple impersonation permissions are
            /// available on the token
            /// </param>
            public static IList<StudentInternshipExternalResponse> Get(this IStudentInternshipExternal operations, System.DateTime periodFrom, System.DateTime periodTo, string schoolCode, string xSelectedSchoolCode = default(string))
            {
                return operations.GetAsync(periodFrom, periodTo, schoolCode, xSelectedSchoolCode).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='periodFrom'>
            /// Beginning of the range for start date of the students' internships.
            /// </param>
            /// <param name='periodTo'>
            /// End of the range for start date of the students' internships.
            /// </param>
            /// <param name='schoolCode'>
            /// The school code for which to get data.
            /// </param>
            /// <param name='xSelectedSchoolCode'>
            /// Selected school code, used when multiple impersonation permissions are
            /// available on the token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<StudentInternshipExternalResponse>> GetAsync(this IStudentInternshipExternal operations, System.DateTime periodFrom, System.DateTime periodTo, string schoolCode, string xSelectedSchoolCode = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(periodFrom, periodTo, schoolCode, xSelectedSchoolCode, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
