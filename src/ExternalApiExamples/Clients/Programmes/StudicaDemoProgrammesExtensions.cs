// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Programmes.Client
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for StudicaDemoProgrammes.
    /// </summary>
    public static partial class StudicaDemoProgrammesExtensions
    {
            /// <summary>
            /// _AbsenceRegistrationsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='absenceRegistrationsExternalRequest'>
            /// </param>
            public static PagedResponseAbsenceRegistrationExternalResponse Post(this IStudicaDemoProgrammes operations, AbsenceRegistrationsExternalRequest absenceRegistrationsExternalRequest = default(AbsenceRegistrationsExternalRequest))
            {
                return operations.PostAsync(absenceRegistrationsExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _AbsenceRegistrationsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='absenceRegistrationsExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseAbsenceRegistrationExternalResponse> PostAsync(this IStudicaDemoProgrammes operations, AbsenceRegistrationsExternalRequest absenceRegistrationsExternalRequest = default(AbsenceRegistrationsExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostWithHttpMessagesAsync(absenceRegistrationsExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _ActiveBridgingCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='activeBridgingCoursesExternalRequest'>
            /// </param>
            public static PagedResponseBridgingCoursesExternalResponse Post1(this IStudicaDemoProgrammes operations, ActiveBridgingCoursesExternalRequest activeBridgingCoursesExternalRequest = default(ActiveBridgingCoursesExternalRequest))
            {
                return operations.Post1Async(activeBridgingCoursesExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _ActiveBridgingCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='activeBridgingCoursesExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseBridgingCoursesExternalResponse> Post1Async(this IStudicaDemoProgrammes operations, ActiveBridgingCoursesExternalRequest activeBridgingCoursesExternalRequest = default(ActiveBridgingCoursesExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post1WithHttpMessagesAsync(activeBridgingCoursesExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _ActiveSubjectCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='activeSubjectCoursesExternalRequest'>
            /// </param>
            public static PagedResponseSubjectCourseExternalResponse Post2(this IStudicaDemoProgrammes operations, ActiveSubjectCoursesExternalRequest activeSubjectCoursesExternalRequest = default(ActiveSubjectCoursesExternalRequest))
            {
                return operations.Post2Async(activeSubjectCoursesExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _ActiveSubjectCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='activeSubjectCoursesExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseSubjectCourseExternalResponse> Post2Async(this IStudicaDemoProgrammes operations, ActiveSubjectCoursesExternalRequest activeSubjectCoursesExternalRequest = default(ActiveSubjectCoursesExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post2WithHttpMessagesAsync(activeSubjectCoursesExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _ActivitiesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='activitiesExternalRequest'>
            /// </param>
            public static PagedResponseActivityResponse Post3(this IStudicaDemoProgrammes operations, ActivitiesExternalRequest activitiesExternalRequest = default(ActivitiesExternalRequest))
            {
                return operations.Post3Async(activitiesExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _ActivitiesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='activitiesExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseActivityResponse> Post3Async(this IStudicaDemoProgrammes operations, ActivitiesExternalRequest activitiesExternalRequest = default(ActivitiesExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post3WithHttpMessagesAsync(activitiesExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _BulkAbsenceRegistrationsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='bulkAbsenceRegistrationsExternalRequest'>
            /// </param>
            public static IList<AbsenceRegistrationExternalResponse> Post4(this IStudicaDemoProgrammes operations, BulkAbsenceRegistrationsExternalRequest bulkAbsenceRegistrationsExternalRequest = default(BulkAbsenceRegistrationsExternalRequest))
            {
                return operations.Post4Async(bulkAbsenceRegistrationsExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _BulkAbsenceRegistrationsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='bulkAbsenceRegistrationsExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<AbsenceRegistrationExternalResponse>> Post4Async(this IStudicaDemoProgrammes operations, BulkAbsenceRegistrationsExternalRequest bulkAbsenceRegistrationsExternalRequest = default(BulkAbsenceRegistrationsExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post4WithHttpMessagesAsync(bulkAbsenceRegistrationsExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _EducationalProgrammesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='educationalProgrammesExternalRequest'>
            /// </param>
            public static PagedResponseEducationalProgrammeExternalResponse Post5(this IStudicaDemoProgrammes operations, EducationalProgrammesExternalRequest educationalProgrammesExternalRequest = default(EducationalProgrammesExternalRequest))
            {
                return operations.Post5Async(educationalProgrammesExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _EducationalProgrammesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='educationalProgrammesExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseEducationalProgrammeExternalResponse> Post5Async(this IStudicaDemoProgrammes operations, EducationalProgrammesExternalRequest educationalProgrammesExternalRequest = default(EducationalProgrammesExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post5WithHttpMessagesAsync(educationalProgrammesExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _LessonsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lessonsExternalRequest'>
            /// </param>
            public static PagedResponseLessonExternalResponse Post6(this IStudicaDemoProgrammes operations, LessonsExternalRequest lessonsExternalRequest = default(LessonsExternalRequest))
            {
                return operations.Post6Async(lessonsExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _LessonsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lessonsExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseLessonExternalResponse> Post6Async(this IStudicaDemoProgrammes operations, LessonsExternalRequest lessonsExternalRequest = default(LessonsExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post6WithHttpMessagesAsync(lessonsExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _SchoolCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='schoolCoursesExternalRequest'>
            /// </param>
            public static PagedResponseSchoolCourseExternalResponse Post7(this IStudicaDemoProgrammes operations, SchoolCoursesExternalRequest schoolCoursesExternalRequest = default(SchoolCoursesExternalRequest))
            {
                return operations.Post7Async(schoolCoursesExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _SchoolCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='schoolCoursesExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseSchoolCourseExternalResponse> Post7Async(this IStudicaDemoProgrammes operations, SchoolCoursesExternalRequest schoolCoursesExternalRequest = default(SchoolCoursesExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post7WithHttpMessagesAsync(schoolCoursesExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _SessionsByIdExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='sessionIds'>
            /// The ids of the sessions to retrieve.
            /// </param>
            /// <param name='schoolCode'>
            /// String The school code for which to get data.
            /// </param>
            public static IList<SessionDto> Post8(this IStudicaDemoProgrammes operations, IList<System.Guid> sessionIds, string schoolCode)
            {
                return operations.Post8Async(sessionIds, schoolCode).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _SessionsByIdExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='sessionIds'>
            /// The ids of the sessions to retrieve.
            /// </param>
            /// <param name='schoolCode'>
            /// String The school code for which to get data.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<SessionDto>> Post8Async(this IStudicaDemoProgrammes operations, IList<System.Guid> sessionIds, string schoolCode, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post8WithHttpMessagesAsync(sessionIds, schoolCode, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _SessionsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='sessionsExternalRequest'>
            /// </param>
            public static PagedResponseSessionDto Post9(this IStudicaDemoProgrammes operations, SessionsExternalRequest sessionsExternalRequest = default(SessionsExternalRequest))
            {
                return operations.Post9Async(sessionsExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _SessionsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='sessionsExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseSessionDto> Post9Async(this IStudicaDemoProgrammes operations, SessionsExternalRequest sessionsExternalRequest = default(SessionsExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post9WithHttpMessagesAsync(sessionsExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _StudentActivityReportsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentActivityReportsExternalRequest'>
            /// </param>
            public static IList<ActivityGroupDto> Post10(this IStudicaDemoProgrammes operations, StudentActivityReportsExternalRequest studentActivityReportsExternalRequest = default(StudentActivityReportsExternalRequest))
            {
                return operations.Post10Async(studentActivityReportsExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _StudentActivityReportsExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentActivityReportsExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<ActivityGroupDto>> Post10Async(this IStudicaDemoProgrammes operations, StudentActivityReportsExternalRequest studentActivityReportsExternalRequest = default(StudentActivityReportsExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post10WithHttpMessagesAsync(studentActivityReportsExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _StudentActivityReportsV2External_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentActivityReportsV2ExternalRequest'>
            /// </param>
            public static IList<ActivityGroup2Dto> Post11(this IStudicaDemoProgrammes operations, StudentActivityReportsV2ExternalRequest studentActivityReportsV2ExternalRequest = default(StudentActivityReportsV2ExternalRequest))
            {
                return operations.Post11Async(studentActivityReportsV2ExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _StudentActivityReportsV2External_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentActivityReportsV2ExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<ActivityGroup2Dto>> Post11Async(this IStudicaDemoProgrammes operations, StudentActivityReportsV2ExternalRequest studentActivityReportsV2ExternalRequest = default(StudentActivityReportsV2ExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post11WithHttpMessagesAsync(studentActivityReportsV2ExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _StudentInternshipExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentInternshipExternalRequest'>
            /// </param>
            public static IList<StudentInternshipExternalResponse> Post12(this IStudicaDemoProgrammes operations, StudentInternshipExternalRequest studentInternshipExternalRequest = default(StudentInternshipExternalRequest))
            {
                return operations.Post12Async(studentInternshipExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _StudentInternshipExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentInternshipExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<StudentInternshipExternalResponse>> Post12Async(this IStudicaDemoProgrammes operations, StudentInternshipExternalRequest studentInternshipExternalRequest = default(StudentInternshipExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post12WithHttpMessagesAsync(studentInternshipExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _StudentSchoolCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentSchoolCoursesExternalRequest'>
            /// </param>
            public static IList<StudentSchoolCoursesExternalResponse> Post13(this IStudicaDemoProgrammes operations, StudentSchoolCoursesExternalRequest studentSchoolCoursesExternalRequest = default(StudentSchoolCoursesExternalRequest))
            {
                return operations.Post13Async(studentSchoolCoursesExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _StudentSchoolCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentSchoolCoursesExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<StudentSchoolCoursesExternalResponse>> Post13Async(this IStudicaDemoProgrammes operations, StudentSchoolCoursesExternalRequest studentSchoolCoursesExternalRequest = default(StudentSchoolCoursesExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post13WithHttpMessagesAsync(studentSchoolCoursesExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _StudentSubjectCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentSubjectCoursesExternalRequest'>
            /// </param>
            public static PagedResponseStudentSubjectCoursesExternalResponse Post14(this IStudicaDemoProgrammes operations, StudentSubjectCoursesExternalRequest studentSubjectCoursesExternalRequest = default(StudentSubjectCoursesExternalRequest))
            {
                return operations.Post14Async(studentSubjectCoursesExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _StudentSubjectCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentSubjectCoursesExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseStudentSubjectCoursesExternalResponse> Post14Async(this IStudicaDemoProgrammes operations, StudentSubjectCoursesExternalRequest studentSubjectCoursesExternalRequest = default(StudentSubjectCoursesExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post14WithHttpMessagesAsync(studentSubjectCoursesExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// _SubjectCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subjectCoursesExternalRequest'>
            /// </param>
            public static PagedResponseSubjectCourseExternalResponse Post15(this IStudicaDemoProgrammes operations, SubjectCoursesExternalRequest subjectCoursesExternalRequest = default(SubjectCoursesExternalRequest))
            {
                return operations.Post15Async(subjectCoursesExternalRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// _SubjectCoursesExternal_Post
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subjectCoursesExternalRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseSubjectCourseExternalResponse> Post15Async(this IStudicaDemoProgrammes operations, SubjectCoursesExternalRequest subjectCoursesExternalRequest = default(SubjectCoursesExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post15WithHttpMessagesAsync(subjectCoursesExternalRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
