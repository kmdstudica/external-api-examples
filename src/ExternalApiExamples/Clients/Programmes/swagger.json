{
  "swagger": "2.0",
  "info": {
    "title": "KMD Studica - Programmes",
    "version": "v1"
  },
  "host": "gateway.kmdlogic.io",
  "basePath": "/studica-demo/programmes/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/AbsenceRegistrationsExternal": {
      "get": {
        "tags": [
          "AbsenceRegistrationsExternal"
        ],
        "operationId": "AbsenceRegistrationsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StudentId",
            "description": "Absent student.",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "LessonId",
            "description": "Lesson of absence.",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "DateFrom",
            "description": "Beginning of the range for absence date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "DateTo",
            "description": "End of the range for absence date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_AbsenceRegistrationExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AbsenceRegistrationsExternal"
        ],
        "operationId": "_AbsenceRegistrationsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AbsenceRegistrationsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_AbsenceRegistrationExternalResponse"
            }
          }
        }
      }
    },
    "/AddLessonsExternal": {
      "post": {
        "tags": [
          "AddLessonsExternal"
        ],
        "operationId": "AddLessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AddLessonsExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/BulkEducationalProgrammesExternal": {
      "post": {
        "tags": [
          "BulkEducationalProgrammesExternal"
        ],
        "operationId": "BulkEducationalProgrammesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkEducationalProgrammesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EducationalProgrammeExternalResponse"
              }
            }
          }
        }
      }
    },
    "/BulkLessonsExternal": {
      "post": {
        "tags": [
          "BulkLessonsExternal"
        ],
        "operationId": "BulkLessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkLessonsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LessonExternalResponse"
              }
            }
          }
        }
      }
    },
    "/BulkSubjectCoursesExternal": {
      "post": {
        "tags": [
          "BulkSubjectCoursesExternal"
        ],
        "operationId": "BulkSubjectCoursesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkSubjectCoursesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubjectCourseExternalResponse"
              }
            }
          }
        }
      }
    },
    "/DeleteLessonExternal": {
      "post": {
        "tags": [
          "DeleteLessonExternal"
        ],
        "operationId": "DeleteLessonExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeleteLessonExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/DeleteLessonsExternal": {
      "post": {
        "tags": [
          "DeleteLessonsExternal"
        ],
        "operationId": "DeleteLessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeleteLessonsExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EditLessonExternal": {
      "post": {
        "tags": [
          "EditLessonExternal"
        ],
        "operationId": "EditLessonExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EditLessonExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EducationalProgrammesExternal": {
      "get": {
        "tags": [
          "EducationalProgrammesExternal"
        ],
        "operationId": "EducationalProgrammesExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StartDateFrom",
            "description": "Beginning of the range for start date of the educational programmes.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "StartDateTo",
            "description": "End of the range for start date of the educational programmes.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "AreaOfResponsibilityId",
            "description": "Option for also querying educational programmes by area of responsibility in addition to dates",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_EducationalProgrammeExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EducationalProgrammesExternal"
        ],
        "operationId": "_EducationalProgrammesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EducationalProgrammesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_EducationalProgrammeExternalResponse"
            }
          }
        }
      }
    },
    "/LessonsExternal": {
      "get": {
        "tags": [
          "LessonsExternal"
        ],
        "operationId": "LessonsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DepartmentId",
            "description": "Department where the lesson is conducted.",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "DateFrom",
            "description": "Beginning of range for lesson date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "DateTo",
            "description": "End of range for lesson date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "HasExternalId",
            "description": "Flag indicating if lesson contains external id.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_LessonExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "LessonsExternal"
        ],
        "operationId": "_LessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LessonsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_LessonExternalResponse"
            }
          }
        }
      }
    },
    "/RegisterAbsenceExternal": {
      "post": {
        "tags": [
          "RegisterAbsenceExternal"
        ],
        "operationId": "RegisterAbsenceExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RegisterAbsenceExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/SubjectCoursesExternal": {
      "get": {
        "tags": [
          "SubjectCoursesExternal"
        ],
        "operationId": "SubjectCoursesExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StartDateFrom",
            "description": "Beginning of the range for start date subject courses.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "StartDateTo",
            "description": "End of the range for start date subject courses.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "LmsIndicator",
            "description": "Is the entity to be created in the LMS.\r\nIf not specified, then the value of the LMS indicator is disregarded in the filtering.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SubjectCourseExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SubjectCoursesExternal"
        ],
        "operationId": "_SubjectCoursesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SubjectCoursesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SubjectCourseExternalResponse"
            }
          }
        }
      }
    },
    "/UnscheduledLessonsExternal": {
      "get": {
        "tags": [
          "UnscheduledLessonsExternal"
        ],
        "operationId": "UnscheduledLessonsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DepartmentId",
            "description": "Department where the lesson is conducted.",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "DateFrom",
            "description": "Beginning of range for lesson date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "DateTo",
            "description": "End of range for lesson date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "HasExternalId",
            "description": "Flag indicating if lesson contains external id.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_UnscheduledLessonExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UnscheduledLessonsExternal"
        ],
        "operationId": "_UnscheduledLessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LessonsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_UnscheduledLessonExternalResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AbsenceRegistrationExternalResponse": {
      "title": "AbsenceRegistrationExternalResponse",
      "description": "The model of absence.",
      "required": [
        "absenceDate",
        "approved",
        "lessonId",
        "minutes",
        "status",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Absent student id.",
          "type": "string",
          "x-nullable": false
        },
        "lessonId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Lesson id.",
          "type": "string",
          "x-nullable": false
        },
        "absenceDate": {
          "format": "date",
          "title": "Date",
          "description": "Date of absence.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "minutes": {
          "format": "int32",
          "title": "Int32",
          "description": "The length of the absence in minutes.",
          "type": "integer",
          "x-nullable": false
        },
        "approved": {
          "title": "Boolean",
          "description": "Was absence approved.",
          "type": "boolean",
          "x-nullable": false
        },
        "status": {
          "title": "AbsenceRegistrationStatus",
          "description": "Type of absence.",
          "enum": [
            "Present",
            "Absent",
            "PartialAbsence"
          ],
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "PagedResponse_AbsenceRegistrationExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbsenceRegistrationExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "AbsenceRegistrationsExternalRequest": {
      "title": "AbsenceRegistrationsExternalRequest",
      "description": "Returns a paged list of absences satisfying provided criteria.",
      "required": [
        "dateFrom",
        "dateTo",
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "description": "Absent student.",
          "type": "string"
        },
        "lessonId": {
          "format": "uuid",
          "description": "Lesson of absence.",
          "type": "string"
        },
        "dateFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of the range for absence date.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "dateTo": {
          "format": "date",
          "title": "Date",
          "description": "End of the range for absence date.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "NewLessonExternal": {
      "title": "NewLessonExternal",
      "required": [
        "id",
        "subjectCourseId",
        "teacherIds"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the lesson.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "maxLength": 50,
          "type": "string"
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The Id of the subject course this lesson is added to.",
          "type": "string",
          "x-nullable": false
        },
        "roomId": {
          "format": "uuid",
          "description": "Identifier of the room where lesson is conducted.",
          "type": "string"
        },
        "date": {
          "format": "date",
          "description": "Date of the lesson.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "teacherIds": {
          "description": "List of teacher' identifiers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        }
      }
    },
    "AddLessonsExternalCommand": {
      "title": "AddLessonsExternalCommand",
      "description": "Adds new lessons.",
      "required": [
        "newLessons",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "newLessons": {
          "description": "New lessons.",
          "minLength": 1,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewLessonExternal"
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "type": "string"
        }
      }
    },
    "BulkEducationalProgrammesExternalRequest": {
      "title": "BulkEducationalProgrammesExternalRequest",
      "description": "Returns a list of educational programmes satisfying provided criteria.",
      "required": [
        "educationalProgrammeIds",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "educationalProgrammeIds": {
          "description": "Educational programme identifiers for bulk query.",
          "maxLength": 1000,
          "minLength": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "EducationalProgrammeExternalResponse": {
      "title": "EducationalProgrammeExternalResponse",
      "description": "Model of the educational programme.",
      "required": [
        "departmentId",
        "endDate",
        "id",
        "name",
        "startDate",
        "studentsIds",
        "subjectCourseIds"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the educational programme.",
          "type": "string",
          "x-nullable": false
        },
        "designation": {
          "title": "String",
          "description": "The designation (user facing unique id) of the educational programme",
          "type": "string"
        },
        "name": {
          "title": "String",
          "description": "Name of the educational programme.",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the educational programme.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date for the educational programme.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "areaOfResponsibilityId": {
          "format": "uuid",
          "description": "Reference id of the area of responsibility.",
          "type": "string"
        },
        "dayCalendarId": {
          "format": "uuid",
          "description": "Reference id of the day calendar.",
          "type": "string"
        },
        "schoolHoursPlanId": {
          "format": "uuid",
          "description": "Reference id of the school hours plan.",
          "type": "string"
        },
        "departmentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Reference id of the department.",
          "type": "string",
          "x-nullable": false
        },
        "studentsIds": {
          "description": "Reference ids to assigned students.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "subjectCourseIds": {
          "description": "Reference ids to the subject courses that are associated with the educational programme",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        }
      }
    },
    "BulkLessonsExternalRequest": {
      "title": "BulkLessonsExternalRequest",
      "description": "Returns a list of lessons satisfying provided criteria.",
      "required": [
        "lessonIds",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "lessonIds": {
          "description": "Lesson identifiers for bulk query.",
          "maxLength": 1000,
          "minLength": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "LessonExternalResponse": {
      "title": "LessonExternalResponse",
      "description": "The model of lesson.",
      "required": [
        "date",
        "id",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Unique identifier.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "type": "string"
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Reference to the subject course that lesson is part of.",
          "type": "string",
          "x-nullable": false
        },
        "roomId": {
          "format": "uuid",
          "description": "Reference to the room where lesson is conducted.",
          "type": "string"
        },
        "date": {
          "format": "date",
          "title": "Date",
          "description": "Date of the lesson.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the lesson.\r\nThis property is filled if the lesson is using a user defined schedule",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.\r\nThis property is filled if the lesson is using a user defined schedule",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "schoolHourEntryId": {
          "format": "uuid",
          "description": "If the lesson is planned using the school hours time table, the SchoolHourEntryId will be populated.\r\nIf the lesson otherwise is using custom start and end time, the SchoolHourEntryId will be null (this is the default of most of the partnering time table systems)",
          "type": "string"
        },
        "teachersIds": {
          "description": "Teachers assigned to the lesson.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        }
      }
    },
    "BulkSubjectCoursesExternalRequest": {
      "title": "BulkSubjectCoursesExternalRequest",
      "description": "Returns a list of subject courses satisfying provided criteria.",
      "required": [
        "schoolCode",
        "subjectCourseIds"
      ],
      "type": "object",
      "properties": {
        "subjectCourseIds": {
          "description": "Subject course identifiers for bulk query.",
          "maxLength": 1000,
          "minLength": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "LevelDetails": {
      "title": "LevelDetails",
      "required": [
        "levelId"
      ],
      "type": "object",
      "properties": {
        "levelId": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "level": {
          "title": "String",
          "type": "string"
        },
        "description": {
          "title": "String",
          "type": "string"
        },
        "levelType": {
          "title": "String",
          "type": "string"
        }
      }
    },
    "UVMSubjectDetails": {
      "title": "UVMSubjectDetails",
      "required": [
        "canOverwriteDuration",
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Unique identification of subject course",
          "type": "string",
          "x-nullable": false
        },
        "subject": {
          "title": "String",
          "description": "Subject code (Fagnummer) from UMO",
          "type": "string"
        },
        "description": {
          "title": "String",
          "description": "UVM subject description",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "description": "Possible start date of UVM subject",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000"
        },
        "endDate": {
          "format": "date",
          "description": "Possible end date of UVM subject",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000"
        },
        "canOverwriteDuration": {
          "title": "Boolean",
          "description": "Is it possible to have a locally defined duration of this subject",
          "type": "boolean",
          "x-nullable": false
        },
        "durationInDays": {
          "format": "double",
          "description": "Possible duration of subject in days. \r\nThis is used for EUD. \r\nCan be null. In this case look at Programmes.Host.ExternalApi.SubjectCourses.Queries.SubjectCourses.UVMSubjectDetails.DurationInHours",
          "type": "number"
        },
        "durationInHours": {
          "format": "double",
          "description": "Possible duration of subject in hours. \r\nThis us used for Adult Education Center (VUC)\r\nCan be null. In this case look at Programmes.Host.ExternalApi.SubjectCourses.Queries.SubjectCourses.UVMSubjectDetails.DurationInDays",
          "type": "number"
        },
        "levelDetails": {
          "$ref": "#/definitions/LevelDetails"
        }
      }
    },
    "SubjectCourseExternalResponse_Student": {
      "title": "SubjectCourseExternalResponse_Student",
      "description": "Model of the student assigned to a subject course.",
      "required": [
        "endDate",
        "startDate",
        "studentId",
        "usePeriodFromSubjectCourse"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the student.",
          "type": "string",
          "x-nullable": false
        },
        "uvmSubject": {
          "description": "Subject that student is assigned to.",
          "allOf": [
            {
              "$ref": "#/definitions/UVMSubjectDetails"
            }
          ]
        },
        "usePeriodFromSubjectCourse": {
          "title": "Boolean",
          "description": "Flag indicating, whether period should be taken from subject course.",
          "type": "boolean",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the period.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date of the period.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        }
      }
    },
    "SubjectCourseExternalResponse": {
      "title": "SubjectCourseExternalResponse",
      "description": "Model of the subject course.",
      "required": [
        "educationalProgrammeId",
        "endDate",
        "id",
        "lmsIndicator",
        "name",
        "startDate",
        "students",
        "teachersIds"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the subject course.",
          "type": "string",
          "x-nullable": false
        },
        "designation": {
          "title": "String",
          "description": "The designation (user facing unique id) of the subject course",
          "type": "string"
        },
        "educationalProgrammeId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the associated educational programme.",
          "type": "string",
          "x-nullable": false
        },
        "defaultSubjectId": {
          "format": "uuid",
          "description": "The id of the default subject for this subject course.",
          "type": "string"
        },
        "name": {
          "title": "String",
          "description": "Name of the subject course.",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the subject course.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date for the subject course.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "lmsIndicator": {
          "title": "Boolean",
          "description": "Is the entity to be created in the LMS.",
          "type": "boolean",
          "x-nullable": false
        },
        "students": {
          "description": "Assigned students.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectCourseExternalResponse_Student"
          }
        },
        "teachersIds": {
          "description": "Reference ids to assigned teachers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        }
      }
    },
    "DeleteLessonExternalCommand": {
      "title": "DeleteLessonExternalCommand",
      "description": "Deletes existing lesson.",
      "required": [
        "id",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the lesson.",
          "type": "string",
          "x-nullable": false
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the subject course this lesson is deleted from.",
          "type": "string",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "type": "string"
        }
      }
    },
    "DeleteLessonsExternalCommand": {
      "title": "DeleteLessonsExternalCommand",
      "description": "Deletes existing lessons.",
      "required": [
        "ids",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "ids": {
          "description": "Identifiers of the lessons.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the subject course this lesson is deleted from.",
          "type": "string",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "type": "string"
        }
      }
    },
    "EditLessonExternalCommand": {
      "title": "EditLessonExternalCommand",
      "description": "Edits existing lesson.",
      "required": [
        "id",
        "subjectCourseId",
        "teacherIds"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the lesson.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "maxLength": 50,
          "type": "string"
        },
        "roomId": {
          "format": "uuid",
          "description": "Identifier of the room where lesson is conducted.",
          "type": "string"
        },
        "date": {
          "format": "date",
          "description": "Date of the lesson.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The Id of the subject course this lesson is added to.",
          "type": "string",
          "x-nullable": false
        },
        "teacherIds": {
          "description": "List of teacher' identifiers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "type": "string"
        }
      }
    },
    "PagedResponse_EducationalProgrammeExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EducationalProgrammeExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "EducationalProgrammesExternalRequest": {
      "title": "EducationalProgrammesExternalRequest",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode",
        "startDateFrom",
        "startDateTo"
      ],
      "type": "object",
      "properties": {
        "startDateFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of the range for start date of the educational programmes.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "startDateTo": {
          "format": "date",
          "title": "Date",
          "description": "End of the range for start date of the educational programmes.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "areaOfResponsibilityId": {
          "format": "uuid",
          "description": "Option for also querying educational programmes by area of responsibility in addition to dates",
          "type": "string"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "PagedResponse_LessonExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LessonExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "LessonsExternalRequest": {
      "title": "LessonsExternalRequest",
      "description": "Returns a paged list of lessons satisfying provided criteria.",
      "required": [
        "dateFrom",
        "dateTo",
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "departmentId": {
          "format": "uuid",
          "description": "Department where the lesson is conducted.",
          "type": "string"
        },
        "dateFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of range for lesson date.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "dateTo": {
          "format": "date",
          "title": "Date",
          "description": "End of range for lesson date.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "hasExternalId": {
          "description": "Flag indicating if lesson contains external id.",
          "type": "boolean"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "RegisterAbsenceRegistrationDto": {
      "title": "RegisterAbsenceRegistrationDto",
      "required": [
        "approved",
        "minutes",
        "status",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The student to register absence for.",
          "type": "string",
          "x-nullable": false
        },
        "status": {
          "title": "AbsenceRegistrationStatus",
          "description": "Status of the absence registration:\r\n0 = Present\r\n1 = Absent\r\n2 = Partially absent",
          "enum": [
            "Present",
            "Absent",
            "PartialAbsence"
          ],
          "type": "string",
          "x-nullable": false
        },
        "minutes": {
          "format": "int32",
          "title": "Int32",
          "description": "How many minutes the student was absent for.\r\nMust be 0 if Status is not partially absent.",
          "type": "integer",
          "x-nullable": false
        },
        "approved": {
          "title": "Boolean",
          "description": "Whether the absence was approved.",
          "type": "boolean",
          "x-nullable": false
        },
        "comment": {
          "title": "String",
          "description": "Educator's or optionally Administrative employee's comment regarding the absence.",
          "type": "string"
        }
      }
    },
    "RegisterAbsenceExternalCommand": {
      "title": "RegisterAbsenceExternalCommand",
      "description": "Registers absence of student.",
      "required": [
        "absenceRegistered",
        "absenceRegistrations",
        "lessonId",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "lessonId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of lesson to register absence on.",
          "type": "string",
          "x-nullable": false
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the subject course the lesson is part of.",
          "type": "string",
          "x-nullable": false
        },
        "absenceRegistered": {
          "title": "Boolean",
          "description": "Has all absence been registered",
          "type": "boolean",
          "x-nullable": false
        },
        "absenceRegistrations": {
          "description": "The absence registrations on the lesson.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegisterAbsenceRegistrationDto"
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "type": "string"
        }
      }
    },
    "PagedResponse_SubjectCourseExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectCourseExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "SubjectCoursesExternalRequest": {
      "title": "SubjectCoursesExternalRequest",
      "description": "Returns a paged list of subject courses satisfying provided criteria.",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode",
        "startDateFrom",
        "startDateTo"
      ],
      "type": "object",
      "properties": {
        "startDateFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of the range for start date subject courses.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "startDateTo": {
          "format": "date",
          "title": "Date",
          "description": "End of the range for start date subject courses.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000",
          "x-nullable": false
        },
        "lmsIndicator": {
          "description": "Is the entity to be created in the LMS.\r\nIf not specified, then the value of the LMS indicator is disregarded in the filtering.",
          "type": "boolean"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "UnscheduledLessonExternalResponse": {
      "title": "UnscheduledLessonExternalResponse",
      "description": "The model of lesson.",
      "required": [
        "id",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Unique identifier.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "type": "string"
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Reference to the subject course that lesson is part of.",
          "type": "string",
          "x-nullable": false
        },
        "roomId": {
          "format": "uuid",
          "description": "Reference to the room where lesson is conducted.",
          "type": "string"
        },
        "date": {
          "format": "date",
          "description": "Date of the lesson.",
          "type": "string",
          "example": "2020-11-10T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "teachersIds": {
          "description": "Teachers assigned to the lesson.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        }
      }
    },
    "PagedResponse_UnscheduledLessonExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnscheduledLessonExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}