{
  "swagger": "2.0",
  "info": {
    "title": "KMD Studica - Programmes",
    "version": "v1"
  },
  "host": "kmd-logic-shareddev-apim.azure-api.net",
  "basePath": "/studica/programmes/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/AbsenceRegistrationsExternal": {
      "get": {
        "tags": [
          "AbsenceRegistrationsExternal"
        ],
        "operationId": "AbsenceRegistrationsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StudentId",
            "description": "Absent student.",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "LessonId",
            "description": "Lesson of absence.",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "DateFrom",
            "description": "Beginning of the range for absence date. The `DateFrom` parameter\r\ndetermines date to get absence data from, as well as the school year period",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "DateTo",
            "description": "End of the range for absence date.\r\nThe `DateTo` parameter must be within the same school year as `DateFrom`",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "OnlyAbsenceReports",
            "description": "Only retrieve reports of absence or partial absence,\r\ndefaults to false (retrieve everything)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_AbsenceRegistrationExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AbsenceRegistrationsExternal"
        ],
        "operationId": "_AbsenceRegistrationsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AbsenceRegistrationsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_AbsenceRegistrationExternalResponse"
            }
          }
        }
      }
    },
    "/ActiveSubjectCoursesExternal": {
      "get": {
        "tags": [
          "ActiveSubjectCoursesExternal"
        ],
        "operationId": "ActiveSubjectCoursesExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SubjectCoursesActiveOnOrAfterDate",
            "description": "Subject courses must be active on the date or after this date\r\nThis parameter is required",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "LmsIndicator",
            "description": "Is the entity to be created in the LMS.\r\nIf not specified, then the value of the LMS indicator is disregarded in the filtering.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "IncludeDeletedSubjectCourses",
            "description": "Should the response include deleted subject courses",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SubjectCourseExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ActiveSubjectCoursesExternal"
        ],
        "operationId": "_ActiveSubjectCoursesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ActiveSubjectCoursesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SubjectCourseExternalResponse"
            }
          }
        }
      }
    },
    "/ActivitiesExternal": {
      "get": {
        "tags": [
          "ActivitiesExternal"
        ],
        "operationId": "ActivitiesExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PeriodFrom",
            "description": "Activities start on or after this date",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PeriodTo",
            "description": "Activities must end on or before this date\r\nProperty is nullable",
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_ActivityResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ActivitiesExternal"
        ],
        "operationId": "_ActivitiesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ActivitiesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_ActivityResponse"
            }
          }
        }
      }
    },
    "/AddIndependentSessionsExternal": {
      "post": {
        "tags": [
          "AddIndependentSessionsExternal"
        ],
        "operationId": "AddIndependentSessionsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AddIndependentSessionsExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/AddLessonsExternal": {
      "post": {
        "tags": [
          "AddLessonsExternal"
        ],
        "operationId": "AddLessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AddLessonsExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/AddSessionsToSubjectCoursesExternal": {
      "post": {
        "tags": [
          "AddSessionsToSubjectCoursesExternal"
        ],
        "operationId": "AddSessionsToSubjectCoursesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AddSessionsToSubjectCoursesExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/BulkAbsenceRegistrationsExternal": {
      "get": {
        "tags": [
          "BulkAbsenceRegistrationsExternal"
        ],
        "operationId": "BulkAbsenceRegistrationsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StudentIds",
            "description": "A list of student ids to get absence for.",
            "required": true,
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string",
              "x-nullable": false
            },
            "maxLength": 1000,
            "minLength": 1
          },
          {
            "in": "query",
            "name": "DateFrom",
            "description": "Beginning of the range for absence date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "DateTo",
            "description": "End of the range for absence date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "OnlyAbsenceReports",
            "description": "Only retrieve reports of absence or partial absence,\r\ndefaults to false (retrieve everything)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbsenceRegistrationExternalResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BulkAbsenceRegistrationsExternal"
        ],
        "operationId": "_BulkAbsenceRegistrationsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkAbsenceRegistrationsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbsenceRegistrationExternalResponse"
              }
            }
          }
        }
      }
    },
    "/BulkBridgingCourseStudentsExternal": {
      "post": {
        "tags": [
          "BulkBridgingCourseStudentsExternal"
        ],
        "operationId": "BulkBridgingCourseStudentsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkBridgingCourseStudentsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BridgingCourseStudentExternalResponse"
              }
            }
          }
        }
      }
    },
    "/BulkEducationalProgrammesExternal": {
      "post": {
        "tags": [
          "BulkEducationalProgrammesExternal"
        ],
        "operationId": "BulkEducationalProgrammesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkEducationalProgrammesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EducationalProgrammeExternalResponse"
              }
            }
          }
        }
      }
    },
    "/BulkLessonsExternal": {
      "post": {
        "tags": [
          "BulkLessonsExternal"
        ],
        "operationId": "BulkLessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkLessonsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LessonExternalResponse"
              }
            }
          }
        }
      }
    },
    "/BulkSubjectCoursesExternal": {
      "post": {
        "tags": [
          "BulkSubjectCoursesExternal"
        ],
        "operationId": "BulkSubjectCoursesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkSubjectCoursesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubjectCourseExternalResponse"
              }
            }
          }
        }
      }
    },
    "/DeleteLessonExternal": {
      "post": {
        "tags": [
          "DeleteLessonExternal"
        ],
        "operationId": "DeleteLessonExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeleteLessonExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/DeleteLessonsExternal": {
      "post": {
        "tags": [
          "DeleteLessonsExternal"
        ],
        "operationId": "DeleteLessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeleteLessonsExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/DeleteSessionsExternal": {
      "post": {
        "tags": [
          "DeleteSessionsExternal"
        ],
        "operationId": "DeleteSessionsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeleteSessionsExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EditIndependentSessionExternal": {
      "post": {
        "tags": [
          "EditIndependentSessionExternal"
        ],
        "operationId": "EditIndependentSessionExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EditIndependentSessionExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EditLessonExternal": {
      "post": {
        "tags": [
          "EditLessonExternal"
        ],
        "operationId": "EditLessonExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EditLessonExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EditSubjectCourseSessionExternal": {
      "post": {
        "tags": [
          "EditSubjectCourseSessionExternal"
        ],
        "operationId": "EditSubjectCourseSessionExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EditSubjectCourseSessionExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EducationalProgrammesExternal": {
      "get": {
        "tags": [
          "EducationalProgrammesExternal"
        ],
        "operationId": "EducationalProgrammesExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StartDateFrom",
            "description": "Beginning of the range for start date of the educational programmes.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "StartDateTo",
            "description": "End of the range for start date of the educational programmes.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "AreaOfResponsibilityId",
            "description": "Option for also querying educational programmes by area of responsibility in addition to dates",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "IncludeDeletedProgrammes",
            "description": "Should the response include deleted educational programmes",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_EducationalProgrammeExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EducationalProgrammesExternal"
        ],
        "operationId": "_EducationalProgrammesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EducationalProgrammesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_EducationalProgrammeExternalResponse"
            }
          }
        }
      }
    },
    "/GroupsExternal": {
      "post": {
        "tags": [
          "GroupsExternal"
        ],
        "operationId": "GroupsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GroupsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupsExternalResponse"
              }
            }
          }
        }
      }
    },
    "/HelloWorldExternal": {
      "get": {
        "tags": [
          "HelloWorldExternal"
        ],
        "operationId": "HelloWorldExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HelloWorldExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "HelloWorldExternal"
        ],
        "operationId": "_HelloWorldExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/HelloWorldExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HelloWorldExternalResponse"
            }
          }
        }
      }
    },
    "/LessonsExternal": {
      "get": {
        "tags": [
          "LessonsExternal"
        ],
        "operationId": "LessonsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DepartmentId",
            "description": "Department where the lesson is conducted.",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "DateFrom",
            "description": "Beginning of range for lesson date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "DateTo",
            "description": "End of range for lesson date.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "HasExternalId",
            "description": "Flag indicating if lesson contains external id.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_LessonExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "LessonsExternal"
        ],
        "operationId": "_LessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LessonsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_LessonExternalResponse"
            }
          }
        }
      }
    },
    "/RegisterAbsenceExternal": {
      "post": {
        "tags": [
          "RegisterAbsenceExternal"
        ],
        "operationId": "RegisterAbsenceExternal_Post",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RegisterAbsenceExternalCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/SchoolCoursesExternal": {
      "get": {
        "tags": [
          "SchoolCoursesExternal"
        ],
        "operationId": "SchoolCoursesExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PeriodFrom",
            "description": "School courses start on or after this date",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PeriodTo",
            "description": "School courses must end on or before this date\r\nProperty is nullable",
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "IncludeDeletedSchoolCourses",
            "description": "Should the response include deleted educational programmes",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SchoolCourseExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SchoolCoursesExternal"
        ],
        "operationId": "_SchoolCoursesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SchoolCoursesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SchoolCourseExternalResponse"
            }
          }
        }
      }
    },
    "/SessionsByIdExternal": {
      "get": {
        "tags": [
          "SessionsByIdExternal"
        ],
        "operationId": "SessionsByIdExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionIds",
            "description": "The ids of the sessions to retrieve.",
            "required": true,
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string",
              "x-nullable": false
            },
            "maxLength": 1000
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SessionDto"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SessionsByIdExternal"
        ],
        "operationId": "_SessionsByIdExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SessionsByIdExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SessionDto"
              }
            }
          }
        }
      }
    },
    "/SessionsExternal": {
      "get": {
        "tags": [
          "SessionsExternal"
        ],
        "operationId": "SessionsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "GroupIds",
            "description": "If specified, returns sessions which have at least one of the specific groups.",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string",
              "x-nullable": false
            }
          },
          {
            "in": "query",
            "name": "TeacherIds",
            "description": "If specified, returns sessions which have at least one of the specific teachers.",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string",
              "x-nullable": false
            }
          },
          {
            "in": "query",
            "name": "RoomIds",
            "description": "If specified, returns sessions which have at least one of the specific rooms.",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string",
              "x-nullable": false
            }
          },
          {
            "in": "query",
            "name": "DateFrom",
            "description": "If specified, returns sessions which are planned on a date no earlier than this.",
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "DateTo",
            "description": "If specified, returns sessions which are planned on a date no later than this.",
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SessionDto"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SessionsExternal"
        ],
        "operationId": "_SessionsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SessionsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SessionDto"
            }
          }
        }
      }
    },
    "/StudentActivityReportsExternal": {
      "get": {
        "tags": [
          "StudentActivityReportsExternal"
        ],
        "operationId": "StudentActivityReportsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PeriodFrom",
            "description": "Beginning of period for activity report quarters.\r\nThe `PeriodFrom` parameter must be a date that is on or before given activity report period\r\nto include the desired report in the output.\r\nE.g. if specifying PeriodFrom as 2021-01-01 and PeriodTo as 2021-06-30\r\nyou will only get the activity report for 2nd period of 2021 (March 16 to June 15)",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PeriodTo",
            "description": "End of period for activity report quarters. The `PeriodTo` parameter must fully encompass\r\nthe end date of a given activity report quarter to include the desired report in the output.\r\nE.g. to get all activity reports for 2020 the PeriodFrom could be 2019-12-15\r\nand PeriodTo could be 2020-12-30",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityGroupDto"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StudentActivityReportsExternal"
        ],
        "operationId": "_StudentActivityReportsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StudentActivityReportsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityGroupDto"
              }
            }
          }
        }
      }
    },
    "/StudentActivityReportsV2External": {
      "get": {
        "tags": [
          "StudentActivityReportsV2External"
        ],
        "operationId": "StudentActivityReportsV2External_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PeriodFrom",
            "description": "Includes reports for periods with a transmission period start date no earlier than `PeriodFrom`",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PeriodTo",
            "description": "Includes reports for periods with a transmission period start date no later than `PeriodFromTo`",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityGroup2Dto"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StudentActivityReportsV2External"
        ],
        "operationId": "_StudentActivityReportsV2External_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StudentActivityReportsV2ExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityGroup2Dto"
              }
            }
          }
        }
      }
    },
    "/StudentInternshipExternal": {
      "get": {
        "tags": [
          "StudentInternshipExternal"
        ],
        "operationId": "StudentInternshipExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PeriodFrom",
            "description": "Beginning of the range for start date of the students' internships.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PeriodTo",
            "description": "End of the range for start date of the students' internships.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentInternshipExternalResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StudentInternshipExternal"
        ],
        "operationId": "_StudentInternshipExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StudentInternshipExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentInternshipExternalResponse"
              }
            }
          }
        }
      }
    },
    "/StudentSchoolCoursesExternal": {
      "get": {
        "tags": [
          "StudentSchoolCoursesExternal"
        ],
        "operationId": "StudentSchoolCoursesExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StudentIds",
            "description": "Student ids for bulk query. Must contain 1 to 1000 elements",
            "required": true,
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string",
              "x-nullable": false
            },
            "maxLength": 1000,
            "minLength": 1
          },
          {
            "in": "query",
            "name": "PeriodFrom",
            "description": "Beginning of the range for start date of the students' school courses.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PeriodTo",
            "description": "End of the range for start date of the students' school courses.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentSchoolCoursesExternalResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StudentSchoolCoursesExternal"
        ],
        "operationId": "_StudentSchoolCoursesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StudentSchoolCoursesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentSchoolCoursesExternalResponse"
              }
            }
          }
        }
      }
    },
    "/StudentSubjectCoursesExternal": {
      "get": {
        "tags": [
          "StudentSubjectCoursesExternal"
        ],
        "operationId": "StudentSubjectCoursesExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StudentIds",
            "description": "A list of students to get subject courses for",
            "required": true,
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string",
              "x-nullable": false
            },
            "maxLength": 1000,
            "minLength": 1
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_StudentSubjectCoursesExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "StudentSubjectCoursesExternal"
        ],
        "operationId": "_StudentSubjectCoursesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StudentSubjectCoursesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_StudentSubjectCoursesExternalResponse"
            }
          }
        }
      }
    },
    "/SubjectCoursesExternal": {
      "get": {
        "tags": [
          "SubjectCoursesExternal"
        ],
        "operationId": "SubjectCoursesExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StartDateFrom",
            "description": "Beginning of the range for start date subject courses.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "StartDateTo",
            "description": "End of the range for start date subject courses.",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "LmsIndicator",
            "description": "Is the entity to be created in the LMS.\r\nIf not specified, then the value of the LMS indicator is disregarded in the filtering.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "IncludeDeletedSubjectCourses",
            "description": "Should the response include deleted subject courses",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SubjectCourseExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SubjectCoursesExternal"
        ],
        "operationId": "_SubjectCoursesExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SubjectCoursesExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_SubjectCourseExternalResponse"
            }
          }
        }
      }
    },
    "/UnscheduledLessonsExternal": {
      "get": {
        "tags": [
          "UnscheduledLessonsExternal"
        ],
        "operationId": "UnscheduledLessonsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DepartmentId",
            "description": "Department where the lesson is conducted.",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_UnscheduledLessonExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UnscheduledLessonsExternal"
        ],
        "operationId": "_UnscheduledLessonsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UnscheduledLessonsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_UnscheduledLessonExternalResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AbsenceRegistrationExternalResponse": {
      "title": "AbsenceRegistrationExternalResponse",
      "description": "The model of absence.",
      "required": [
        "absenceDate",
        "approved",
        "lessonId",
        "minutes",
        "status",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Absent student id.",
          "type": "string",
          "x-nullable": false
        },
        "lessonId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Lesson id.",
          "type": "string",
          "x-nullable": false
        },
        "absenceDate": {
          "format": "date",
          "title": "Date",
          "description": "Date of absence.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "minutes": {
          "format": "int32",
          "title": "Int32",
          "description": "The length of the absence in minutes.",
          "type": "integer",
          "x-nullable": false
        },
        "approved": {
          "title": "Boolean",
          "description": "Was absence approved.",
          "type": "boolean",
          "x-nullable": false
        },
        "status": {
          "title": "AbsenceRegistrationStatus",
          "description": "Type of absence.",
          "enum": [
            "Present",
            "Absent",
            "PartialAbsence",
            "NotRegistered"
          ],
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "AbsenceRegistrationsExternalRequest": {
      "title": "AbsenceRegistrationsExternalRequest",
      "description": "Returns a paged list of absences satisfying provided criteria.",
      "required": [
        "dateFrom",
        "dateTo",
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "description": "Absent student.",
          "type": "string"
        },
        "lessonId": {
          "format": "uuid",
          "description": "Lesson of absence.",
          "type": "string"
        },
        "dateFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of the range for absence date. The `DateFrom` parameter\r\ndetermines date to get absence data from, as well as the school year period",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "dateTo": {
          "format": "date",
          "title": "Date",
          "description": "End of the range for absence date.\r\nThe `DateTo` parameter must be within the same school year as `DateFrom`",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "onlyAbsenceReports": {
          "description": "Only retrieve reports of absence or partial absence,\r\ndefaults to false (retrieve everything)",
          "type": "boolean"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "ActiveSubjectCoursesExternalRequest": {
      "title": "ActiveSubjectCoursesExternalRequest",
      "description": "Returns a paged list of current or future active subject courses satisfying provided criteria.",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode",
        "subjectCoursesActiveOnOrAfterDate"
      ],
      "type": "object",
      "properties": {
        "subjectCoursesActiveOnOrAfterDate": {
          "format": "date",
          "title": "Date",
          "description": "Subject courses must be active on the date or after this date\r\nThis parameter is required",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "lmsIndicator": {
          "description": "Is the entity to be created in the LMS.\r\nIf not specified, then the value of the LMS indicator is disregarded in the filtering.",
          "type": "boolean"
        },
        "includeDeletedSubjectCourses": {
          "description": "Should the response include deleted subject courses",
          "type": "boolean"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "ActivitiesExternalRequest": {
      "title": "ActivitiesExternalRequest",
      "description": "Activities and contributions.\r\nRecommended pagesize is 100",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "periodFrom",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "periodFrom": {
          "format": "date",
          "title": "Date",
          "description": "Activities start on or after this date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "periodTo": {
          "format": "date",
          "description": "Activities must end on or before this date\r\nProperty is nullable",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "ActivityContributionPeriodResponse": {
      "title": "ActivityContributionPeriodResponse",
      "description": "Contribution period for a student",
      "required": [
        "contribution",
        "contributionDays",
        "countingDate",
        "countingPeriodNumber",
        "endDate",
        "startDate",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of student",
          "type": "string",
          "x-nullable": false
        },
        "countingPeriodNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The sequential counting period",
          "type": "integer",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Date the contribution period starts",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "Date the contribution period ends",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "countingDate": {
          "format": "date",
          "title": "Date",
          "description": "Date on which students are accounted for this contribution period",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "qualificationDate": {
          "format": "date",
          "description": "Date on which students are qualified for their education",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "contribution": {
          "format": "double",
          "title": "Decimal",
          "description": "The contribution",
          "type": "number",
          "x-nullable": false
        },
        "remainingContribution": {
          "format": "double",
          "description": "The remaining contribution",
          "type": "number"
        },
        "contributionDays": {
          "format": "double",
          "title": "Decimal",
          "description": "The contribution days",
          "type": "number",
          "x-nullable": false
        },
        "schoolPeriod": {
          "title": "String",
          "description": "The UMO school period of the activity.",
          "type": "string"
        },
        "tmk": {
          "title": "String",
          "description": "The UMO TMK of the activity.",
          "type": "string"
        },
        "requestorType": {
          "title": "String",
          "description": "The UMO requestor type of the activity.",
          "type": "string"
        },
        "accountingCoesa": {
          "title": "String",
          "description": "The accounting CØSA number of the activity.",
          "type": "string"
        },
        "education": {
          "title": "String",
          "description": "The name of the education which the student had at the\r\ntime of the activity.",
          "type": "string"
        },
        "educationVersion": {
          "format": "int32",
          "description": "The education version.",
          "type": "integer"
        }
      }
    },
    "ActivityGroup2Dto": {
      "title": "ActivityGroup2Dto",
      "description": "Activity reports for a specific type of activity, within a transmission period.",
      "required": [
        "exchangeType",
        "transmissionPeriodEndDate",
        "transmissionPeriodStartDate"
      ],
      "type": "object",
      "properties": {
        "transmissionPeriodStartDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the transmission period",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "transmissionPeriodEndDate": {
          "format": "date",
          "title": "Date",
          "description": "End date of the transmission period",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "exchangeType": {
          "title": "ExchangeType",
          "description": "The exchange type of the activity group",
          "enum": [
            "FullTimeStudents",
            "SchoolInternships",
            "BoardingFacilities"
          ],
          "type": "string",
          "x-nullable": false
        },
        "initialReport": {
          "description": "The initial report.",
          "allOf": [
            {
              "$ref": "#/definitions/ActivityV2_ReportDto"
            }
          ]
        },
        "supplementaryReports": {
          "description": "Supplementary reports.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityV2_ReportDto"
          }
        }
      }
    },
    "ActivityGroupDto": {
      "title": "ActivityGroupDto",
      "description": "Activity reports for a specific type of activity, within a reporting period.",
      "required": [
        "exchangeType",
        "reportingPeriodEndDate",
        "reportingPeriodStartDate"
      ],
      "type": "object",
      "properties": {
        "reportingPeriodStartDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the reporting period",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "reportingPeriodEndDate": {
          "format": "date",
          "title": "Date",
          "description": "End date of the reporting period",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "exchangeType": {
          "title": "ExchangeType",
          "description": "The exchange type of the activity group",
          "enum": [
            "FullTimeStudents",
            "SchoolInternships",
            "BoardingFacilities"
          ],
          "type": "string",
          "x-nullable": false
        },
        "originalReport": {
          "description": "The original report.",
          "allOf": [
            {
              "$ref": "#/definitions/ActivityReportDto"
            }
          ]
        },
        "supplementaryReports": {
          "description": "Supplementary reports.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityReportDto"
          }
        }
      }
    },
    "ActivityReportDto": {
      "title": "ActivityReportDto",
      "description": "Data describing one Activity Report",
      "required": [
        "sequenceNumber"
      ],
      "type": "object",
      "properties": {
        "lastEdited": {
          "format": "date-time",
          "description": "The last time the report was edited",
          "type": "string"
        },
        "reportedOn": {
          "format": "date-time",
          "description": "The time at which the Report was reported",
          "type": "string"
        },
        "sequenceNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The sequence number of the report. Is 1 if the report is an original report.\r\nTakes another value if the report is supplementary",
          "type": "integer",
          "x-nullable": false
        },
        "status": {
          "title": "String",
          "description": "Status of the report. Should be the string equivalent of the Report Status Enum",
          "type": "string"
        },
        "activityReportsRows": {
          "description": "List of data rows in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityReportRowDto"
          }
        }
      }
    },
    "ActivityReportRowDto": {
      "title": "ActivityReportRowDto",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "institutionNumber": {
          "title": "String",
          "type": "string"
        },
        "requestor": {
          "title": "String",
          "type": "string"
        },
        "coesaVersion": {
          "title": "String",
          "type": "string"
        },
        "education": {
          "title": "String",
          "type": "string"
        },
        "specialisation": {
          "title": "String",
          "type": "string"
        },
        "entryRoute": {
          "title": "String",
          "type": "string"
        },
        "studentType": {
          "title": "String",
          "type": "string"
        },
        "subject": {
          "title": "String",
          "type": "string"
        },
        "tmk": {
          "title": "String",
          "type": "string"
        },
        "tmkType": {
          "title": "String",
          "type": "string"
        },
        "schoolPeriod": {
          "title": "String",
          "type": "string"
        },
        "countingPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfGrantDays": {
          "format": "double",
          "type": "number"
        },
        "studentActivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityReportsStudentActivityDto"
          }
        }
      }
    },
    "ActivityReportsStudentActivityDto": {
      "title": "ActivityReportsStudentActivityDto",
      "required": [
        "contribution",
        "endDate",
        "startDate",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "sourceId": {
          "format": "uuid",
          "description": "Id of the source of the activity - fx. a SchoolCourseId or BridgingCourseId",
          "type": "string"
        },
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "contribution": {
          "format": "double",
          "title": "Decimal",
          "type": "number",
          "x-nullable": false
        },
        "remainingContribution": {
          "format": "double",
          "type": "number"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        }
      }
    },
    "ActivityResponse": {
      "title": "ActivityResponse",
      "description": "Activity and the Contribution Periods for students",
      "required": [
        "activityEntityId",
        "activityEntityType",
        "activityId"
      ],
      "type": "object",
      "properties": {
        "activityId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the Activity",
          "type": "string",
          "x-nullable": false
        },
        "activityEntityId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the source for the Activity",
          "type": "string",
          "x-nullable": false
        },
        "activityEntityType": {
          "title": "ActivityExternalEntityType",
          "description": "Type of the Activity",
          "enum": [
            "SchoolCourse",
            "Pptt",
            "BridgingCourse",
            "DurationIndependentContribution",
            "SchoolInternship",
            "BoardingFacilities",
            "BoardingFacilitiesExternalStudents"
          ],
          "type": "string",
          "x-nullable": false
        },
        "name": {
          "title": "String",
          "description": "Name of the Activity",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "description": "Activity start date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "endDate": {
          "format": "date",
          "description": "Activity end date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "dayCalendarId": {
          "format": "uuid",
          "description": "Id of the day calendar assigned to the Activity",
          "type": "string"
        },
        "areaOfResponsibilityId": {
          "format": "uuid",
          "description": "Id of the area of responsibility the Activity is assigned to",
          "type": "string"
        },
        "contributionPeriods": {
          "description": "List of Contribution Periods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityContributionPeriodResponse"
          }
        }
      }
    },
    "ActivityV2_ReportDto": {
      "title": "ActivityV2_ReportDto",
      "description": "Data describing one Activity Report",
      "required": [
        "sequenceNumber"
      ],
      "type": "object",
      "properties": {
        "sequenceNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The sequence number of the report. Is 1 if the report is an original report.\r\nTakes another value if the report is supplementary",
          "type": "integer",
          "x-nullable": false
        },
        "reportedOn": {
          "format": "date-time",
          "description": "The time at which the Report was reported",
          "type": "string"
        },
        "lastEdited": {
          "format": "date-time",
          "description": "The last time the report was edited",
          "type": "string"
        },
        "status": {
          "title": "String",
          "description": "Status of the report. Should be the string equivalent of the Report Status Enum",
          "type": "string"
        },
        "activityReportsRows": {
          "description": "List of data rows in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityV2_ReportRowDto"
          }
        }
      }
    },
    "ActivityV2_ReportRowDto": {
      "title": "ActivityV2_ReportRowDto",
      "type": "object",
      "properties": {
        "uvmDepartmentNumber": {
          "title": "String",
          "type": "string"
        },
        "requestor": {
          "title": "String",
          "type": "string"
        },
        "education": {
          "title": "String",
          "type": "string"
        },
        "specialisation": {
          "title": "String",
          "type": "string"
        },
        "entryRoute": {
          "title": "String",
          "type": "string"
        },
        "studentType": {
          "title": "String",
          "type": "string"
        },
        "subject": {
          "title": "String",
          "type": "string"
        },
        "tmk": {
          "title": "String",
          "type": "string"
        },
        "schoolPeriod": {
          "title": "String",
          "type": "string"
        },
        "countingPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfGrantDays": {
          "format": "double",
          "type": "number"
        },
        "studentActivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityV2_StudentActivityDto"
          }
        }
      }
    },
    "ActivityV2_StudentActivityDto": {
      "title": "ActivityV2_StudentActivityDto",
      "required": [
        "activityEntityId",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "activityEntityId": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "countingPeriodStartDate": {
          "format": "date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "countingPeriodEndDate": {
          "format": "date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "contribution": {
          "format": "double",
          "type": "number"
        },
        "remainingContribution": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "AddIndependentSessionsExternalCommand": {
      "title": "AddIndependentSessionsExternalCommand",
      "description": "Add new independent sessions.",
      "required": [
        "schoolCode",
        "sessions"
      ],
      "type": "object",
      "properties": {
        "sessions": {
          "description": "New sessions to create.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIndependentSessionDto"
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "AddLessonsExternalCommand": {
      "title": "AddLessonsExternalCommand",
      "description": "Adds new lessons.",
      "required": [
        "newLessons",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "newLessons": {
          "description": "New lessons.",
          "minItems": 1,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewLessonExternal"
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "AddSessionsToSubjectCoursesExternalCommand": {
      "title": "AddSessionsToSubjectCoursesExternalCommand",
      "description": "Add new sessions to subject courses.",
      "required": [
        "schoolCode",
        "sessions"
      ],
      "type": "object",
      "properties": {
        "sessions": {
          "description": "New sessions to create.",
          "minItems": 1,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalSubjectCourseSessionDto"
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "BridgingCourseStudentExternalResponse": {
      "title": "BridgingCourseStudentExternalResponse",
      "description": "Model of the student.",
      "required": [
        "bridgingcourseId",
        "civilRegistrationNumber",
        "educationVersion",
        "id",
        "protectedNameAndAddress"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Student's identifier.",
          "type": "string",
          "x-nullable": false
        },
        "civilRegistrationNumber": {
          "title": "String",
          "description": "Student's civil registration (CPR) number.",
          "minLength": 1,
          "type": "string"
        },
        "givenName": {
          "title": "String",
          "description": "Student's given name.",
          "type": "string"
        },
        "surname": {
          "title": "String",
          "description": "Student's surname.",
          "type": "string"
        },
        "protectedGivenName": {
          "title": "String",
          "description": "Protected given name from national registry",
          "type": "string"
        },
        "protectedSurname": {
          "title": "String",
          "description": "Protected surname from national registry",
          "type": "string"
        },
        "addressLine": {
          "title": "String",
          "description": "Full address including street, house-nr letter, etc. where the student lives.",
          "type": "string"
        },
        "postalCode": {
          "title": "String",
          "description": "The matching postal code for the city.",
          "type": "string"
        },
        "protectedNameAndAddress": {
          "title": "Boolean",
          "description": "Whether the name and address of the applicant are protected.",
          "type": "boolean",
          "x-nullable": false
        },
        "phone": {
          "title": "String",
          "description": "The student's phone number.",
          "type": "string"
        },
        "mobile": {
          "title": "String",
          "description": "The student's phone number.",
          "type": "string"
        },
        "email": {
          "title": "String",
          "description": "Student's e-mail address.",
          "type": "string"
        },
        "bridgingcourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the Bridging Course the student is linked to",
          "type": "string",
          "x-nullable": false
        },
        "dsDepartmentNumber": {
          "title": "String",
          "description": "The DS department number of the bridging course\r\nwhich the bridging course student is on.",
          "type": "string"
        },
        "education": {
          "title": "String",
          "description": "The name of the education.",
          "type": "string"
        },
        "educationVersion": {
          "format": "int32",
          "title": "Int32",
          "description": "The version of the education.",
          "type": "integer",
          "x-nullable": false
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When was the bridging course created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of information",
          "type": "string"
        }
      }
    },
    "BulkAbsenceRegistrationsExternalRequest": {
      "title": "BulkAbsenceRegistrationsExternalRequest",
      "description": "Returns a paged list of absences satisfying provided criteria.",
      "required": [
        "dateFrom",
        "dateTo",
        "schoolCode",
        "studentIds"
      ],
      "type": "object",
      "properties": {
        "studentIds": {
          "description": "A list of student ids to get absence for.",
          "maxItems": 1000,
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "dateFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of the range for absence date.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "dateTo": {
          "format": "date",
          "title": "Date",
          "description": "End of the range for absence date.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "onlyAbsenceReports": {
          "description": "Only retrieve reports of absence or partial absence,\r\ndefaults to false (retrieve everything)",
          "type": "boolean"
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "BulkBridgingCourseStudentsExternalRequest": {
      "title": "BulkBridgingCourseStudentsExternalRequest",
      "description": "Returns a paged list of bridge building students for given criteria.",
      "required": [
        "schoolCode",
        "studentIds"
      ],
      "type": "object",
      "properties": {
        "studentIds": {
          "description": "Student ids for bulk query. Must contain 1 to 1000 elements",
          "maxItems": 1000,
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "BulkEducationalProgrammesExternalRequest": {
      "title": "BulkEducationalProgrammesExternalRequest",
      "description": "Returns a list of educational programmes satisfying provided criteria.",
      "required": [
        "educationalProgrammeIds",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "educationalProgrammeIds": {
          "description": "Educational programme identifiers for bulk query.",
          "maxItems": 1000,
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "BulkLessonsExternalRequest": {
      "title": "BulkLessonsExternalRequest",
      "description": "Returns a list of lessons satisfying provided criteria.",
      "required": [
        "lessonIds",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "lessonIds": {
          "description": "Lesson identifiers for bulk query.",
          "maxItems": 1000,
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "BulkSubjectCoursesExternalRequest": {
      "title": "BulkSubjectCoursesExternalRequest",
      "description": "Returns a list of subject courses satisfying provided criteria.",
      "required": [
        "schoolCode",
        "subjectCourseIds"
      ],
      "type": "object",
      "properties": {
        "subjectCourseIds": {
          "description": "Subject course identifiers for bulk query.",
          "maxItems": 1000,
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "DeleteLessonExternalCommand": {
      "title": "DeleteLessonExternalCommand",
      "description": "Deletes existing lesson.",
      "required": [
        "id",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the lesson.",
          "type": "string",
          "x-nullable": false
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the subject course this lesson is deleted from.",
          "type": "string",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "type": "string"
        }
      }
    },
    "DeleteLessonsExternalCommand": {
      "title": "DeleteLessonsExternalCommand",
      "description": "Deletes existing lessons.",
      "required": [
        "ids",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "ids": {
          "description": "Identifiers of the lessons.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the subject course this lesson is deleted from.",
          "type": "string",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "type": "string"
        }
      }
    },
    "DeleteSessionsExternalCommand": {
      "title": "DeleteSessionsExternalCommand",
      "description": "Deletes a number of sessions.",
      "required": [
        "schoolCode",
        "sessionIds"
      ],
      "type": "object",
      "properties": {
        "sessionIds": {
          "description": "The sessions to delete.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "EditIndependentSessionExternalCommand": {
      "title": "EditIndependentSessionExternalCommand",
      "description": "Edit an existing independent session.",
      "required": [
        "groupIds",
        "roomIds",
        "schoolCode",
        "sessionId",
        "teacherIds"
      ],
      "type": "object",
      "properties": {
        "sessionId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The id of the session.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "maxLength": 50,
          "type": "string"
        },
        "groupIds": {
          "description": "The groups which the session is assigned to.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "roomIds": {
          "description": "The Ids of the rooms where the session is conducted.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "teacherIds": {
          "description": "List of teacher' identifiers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "date": {
          "format": "date",
          "description": "Date of the session.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the session.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "comment": {
          "title": "String",
          "description": "A comment about the session.",
          "maxLength": 255,
          "type": "string"
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "EditLessonExternalCommand": {
      "title": "EditLessonExternalCommand",
      "description": "Edits existing lesson.",
      "required": [
        "id",
        "subjectCourseId",
        "teacherIds"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the lesson.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "maxLength": 50,
          "type": "string"
        },
        "roomId": {
          "format": "uuid",
          "description": "Obsolete!\r\nIdentifier of the room where lesson is conducted.\r\nUse RoomIds instead of RoomId. RoomId will be removed in a future update.",
          "type": "string"
        },
        "roomIds": {
          "description": "The Ids of the rooms where the lesson is conducted.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "date": {
          "format": "date",
          "description": "Date of the lesson.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The Id of the subject course this lesson is added to.",
          "type": "string",
          "x-nullable": false
        },
        "teacherIds": {
          "description": "List of teacher' identifiers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "type": "string"
        }
      }
    },
    "EditSubjectCourseSessionExternalCommand": {
      "title": "EditSubjectCourseSessionExternalCommand",
      "description": "Edit an existing session related to a subject course.",
      "required": [
        "groupIds",
        "roomIds",
        "schoolCode",
        "sessionId",
        "teacherIds"
      ],
      "type": "object",
      "properties": {
        "sessionId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The id of the session.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "maxLength": 50,
          "type": "string"
        },
        "groupIds": {
          "description": "The groups which the session is assigned to.",
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "roomIds": {
          "description": "The Ids of the rooms where the session is conducted.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "teacherIds": {
          "description": "List of teacher' identifiers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "date": {
          "format": "date",
          "description": "Date of the session.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the session.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "schoolHourEntryId": {
          "format": "uuid",
          "description": "The school hour entry which the session is scheduled to.",
          "type": "string"
        },
        "comment": {
          "title": "String",
          "description": "A comment about the session.",
          "maxLength": 255,
          "type": "string"
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "EducationalProgrammeExternalResponse": {
      "title": "EducationalProgrammeExternalResponse",
      "description": "Model of the educational programme.",
      "required": [
        "departmentId",
        "endDate",
        "id",
        "name",
        "startDate",
        "studentsIds",
        "subjectCourseIds"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the educational programme.",
          "type": "string",
          "x-nullable": false
        },
        "designation": {
          "title": "String",
          "description": "The designation (user facing unique id) of the educational programme",
          "type": "string"
        },
        "name": {
          "title": "String",
          "description": "Name of the educational programme.",
          "minLength": 1,
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the educational programme.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date for the educational programme.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "areaOfResponsibilityId": {
          "format": "uuid",
          "description": "Reference id of the area of responsibility.",
          "type": "string"
        },
        "areaOfEducationId": {
          "format": "uuid",
          "description": "Reference id of the area of education.",
          "type": "string"
        },
        "dayCalendarId": {
          "format": "uuid",
          "description": "Reference id of the day calendar.",
          "type": "string"
        },
        "schoolHoursPlanId": {
          "format": "uuid",
          "description": "Reference id of the school hours plan.",
          "type": "string"
        },
        "departmentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Reference id of the department.",
          "type": "string",
          "x-nullable": false
        },
        "studentsIds": {
          "description": "Reference ids to assigned students.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "subjectCourseIds": {
          "description": "Reference ids to the subject courses that are associated with the educational programme",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "deletedAt": {
          "format": "date-time",
          "description": "If the educational programme has been deleted, this property will have a value",
          "type": "string"
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When it was created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of the educational programme's basic information",
          "type": "string"
        }
      }
    },
    "EducationalProgrammesExternalRequest": {
      "title": "EducationalProgrammesExternalRequest",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode",
        "startDateFrom",
        "startDateTo"
      ],
      "type": "object",
      "properties": {
        "startDateFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of the range for start date of the educational programmes.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "startDateTo": {
          "format": "date",
          "title": "Date",
          "description": "End of the range for start date of the educational programmes.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "areaOfResponsibilityId": {
          "format": "uuid",
          "description": "Option for also querying educational programmes by area of responsibility in addition to dates",
          "type": "string"
        },
        "includeDeletedProgrammes": {
          "description": "Should the response include deleted educational programmes",
          "type": "boolean"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "ExternalIndependentSessionDto": {
      "title": "ExternalIndependentSessionDto",
      "required": [
        "groupIds",
        "roomIds",
        "sessionId",
        "teacherIds"
      ],
      "type": "object",
      "properties": {
        "sessionId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The id of the session.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "maxLength": 50,
          "type": "string"
        },
        "groupIds": {
          "description": "The groups which the session is assigned to.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "roomIds": {
          "description": "The Ids of the rooms where the session is conducted.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "teacherIds": {
          "description": "List of teacher' identifiers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "date": {
          "format": "date",
          "description": "Date of the session.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the session.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "comment": {
          "title": "String",
          "description": "A comment about the session.",
          "maxLength": 255,
          "type": "string"
        }
      }
    },
    "ExternalSubjectCourseSessionDto": {
      "title": "ExternalSubjectCourseSessionDto",
      "required": [
        "groupIds",
        "roomIds",
        "sessionId",
        "teacherIds"
      ],
      "type": "object",
      "properties": {
        "sessionId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The id of the session.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "maxLength": 50,
          "type": "string"
        },
        "groupIds": {
          "description": "The groups which the session is assigned to. These groups must\r\nbe related to subject courses.",
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "roomIds": {
          "description": "The Ids of the rooms where the session is conducted.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "teacherIds": {
          "description": "List of teacher' identifiers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "date": {
          "format": "date",
          "description": "Date of the session.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the session.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "schoolHourEntryId": {
          "format": "uuid",
          "description": "The school hour entry which the session is scheduled to.",
          "type": "string"
        },
        "comment": {
          "title": "String",
          "description": "A comment about the session.",
          "maxLength": 255,
          "type": "string"
        }
      }
    },
    "GroupsExternalRequest": {
      "title": "GroupsExternalRequest",
      "description": "The request for retrieving groups\r\nThe parameters for the request can be a combination of each of the individual properties\r\nwhich will each further narrow the requested data.\r\nAt least one parameter has to be specified",
      "required": [
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "groupsActiveOnOrAfterDate": {
          "format": "date",
          "description": "Groups must be active on or after this date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "groupEntityTypes": {
          "description": "An array of group types (Group Entity Type) to query for\r\n<example>\r\n0 = SubjectCourse\r\n</example>",
          "type": "array",
          "items": {
            "title": "GroupEntityType",
            "enum": [
              "SubjectCourse"
            ],
            "type": "string",
            "x-nullable": false
          }
        },
        "groupIds": {
          "description": "Optional array of groups to read.\r\nMust contain 1 to 1000 elements",
          "maxItems": 1000,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "GroupsExternalResponse": {
      "title": "GroupsExternalResponse",
      "required": [
        "endDate",
        "groupEntityId",
        "groupEntityType",
        "groupId",
        "lmsIndicator",
        "rootGroupId",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "groupId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The id of the group.",
          "type": "string",
          "x-nullable": false
        },
        "groupEntityType": {
          "title": "GroupEntityType",
          "description": "Type of entity that this group refers to\r\ne.g. a subject course or an educational programme",
          "enum": [
            "SubjectCourse"
          ],
          "type": "string",
          "x-nullable": false
        },
        "groupEntityId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the root entity that this group belongs to (owner)",
          "type": "string",
          "x-nullable": false
        },
        "rootGroupId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the root group in this hierarchy",
          "type": "string",
          "x-nullable": false
        },
        "parentGroupId": {
          "format": "uuid",
          "description": "The parent group, if any. Only the top\r\nlevel groups will not have a parent id.",
          "type": "string"
        },
        "name": {
          "title": "String",
          "description": "The name of the group.",
          "type": "string"
        },
        "displayName": {
          "title": "String",
          "description": "The group's display name.\r\nThe name is a combination of the entity type's name and name of the group",
          "type": "string"
        },
        "designation": {
          "title": "String",
          "description": "The group's designation.\r\nThe designation is a combination of the entity type's designation and name of the group",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "The start date of the group.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "The end date of the group.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "numberOfSessions": {
          "format": "int32",
          "description": "The number of sessions defined for this group.",
          "type": "integer"
        },
        "lmsIndicator": {
          "title": "Boolean",
          "description": "Is the entity to be created in the LMS.",
          "type": "boolean",
          "x-nullable": false
        },
        "participationPeriods": {
          "description": "Array of participants in this group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupsExternalResponse_ParticipationPeriodDto"
          }
        },
        "deletedAt": {
          "format": "date-time",
          "description": "If the group has been deleted, this property will have a value",
          "type": "string"
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When it was created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of the group's basic information",
          "type": "string"
        }
      }
    },
    "GroupsExternalResponse_ParticipationPeriodDto": {
      "title": "GroupsExternalResponse_ParticipationPeriodDto",
      "required": [
        "endDate",
        "participantId",
        "participantType",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "participantId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the participant.",
          "type": "string",
          "x-nullable": false
        },
        "participantType": {
          "title": "CourseStudentType",
          "description": "The type of participant.",
          "enum": [
            "Student",
            "BridgingCourseStudent",
            "Employee",
            "ExternalBoardingFacilityStudent"
          ],
          "type": "string",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the period.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date of the period.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        }
      }
    },
    "HelloWorldExternalRequest": {
      "title": "HelloWorldExternalRequest",
      "required": [
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "HelloWorldExternalResponse": {
      "title": "HelloWorldExternalResponse",
      "type": "object",
      "properties": {
        "response": {
          "title": "String",
          "description": "The hello world response",
          "type": "string"
        }
      }
    },
    "LessonExternalResponse": {
      "title": "LessonExternalResponse",
      "description": "The model of lesson.",
      "required": [
        "date",
        "id",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Unique identifier.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "type": "string"
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Reference to the subject course that lesson is part of.",
          "type": "string",
          "x-nullable": false
        },
        "subjectCourseIds": {
          "description": "The ids of the subject courses which are associated with this session. If the type\r\nis None then this value is empty.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "roomId": {
          "format": "uuid",
          "description": "Obsolete!\r\nReference to the room where lesson is conducted.\r\nUse RoomIds instead of RoomId. RoomId will be removed in a future update.",
          "type": "string"
        },
        "roomIds": {
          "description": "The ids of the rooms where the lesson is conducted.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "date": {
          "format": "date",
          "title": "Date",
          "description": "Date of the lesson.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the lesson.\r\nThis property is filled if the lesson is using a user defined schedule",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.\r\nThis property is filled if the lesson is using a user defined schedule",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "schoolHourEntryId": {
          "format": "uuid",
          "description": "If the lesson is planned using the school hours time table, the SchoolHourEntryId will be populated.\r\nIf the lesson otherwise is using custom start and end time, the SchoolHourEntryId will be null (this is the default of most of the partnering time table systems)",
          "type": "string"
        },
        "teachersIds": {
          "description": "Teachers assigned to the lesson.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        }
      }
    },
    "LessonsExternalRequest": {
      "title": "LessonsExternalRequest",
      "description": "Returns a paged list of lessons satisfying provided criteria.",
      "required": [
        "dateFrom",
        "dateTo",
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "departmentId": {
          "format": "uuid",
          "description": "Department where the lesson is conducted.",
          "type": "string"
        },
        "dateFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of range for lesson date.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "dateTo": {
          "format": "date",
          "title": "Date",
          "description": "End of range for lesson date.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "hasExternalId": {
          "description": "Flag indicating if lesson contains external id.",
          "type": "boolean"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "LevelDetails": {
      "title": "LevelDetails",
      "required": [
        "levelId"
      ],
      "type": "object",
      "properties": {
        "levelId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Unique identification of the level.",
          "type": "string",
          "x-nullable": false
        },
        "level": {
          "title": "String",
          "description": "The level indicator, \r\ne.g. A, B, 1, 2, -.",
          "type": "string"
        },
        "description": {
          "title": "String",
          "description": "Description of the level, \r\ne.g. A, Begynder, Niveau 1, Uden niveau.",
          "type": "string"
        },
        "levelType": {
          "title": "String",
          "description": "The type of the level.\r\nTEGN = Characters, TAL = Numbers,\r\nERHVERV, FGU almen, FGU-tema, Delmål.",
          "type": "string"
        }
      }
    },
    "NewLessonExternal": {
      "title": "NewLessonExternal",
      "required": [
        "id",
        "subjectCourseId",
        "teacherIds"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Identifier of the lesson.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "maxLength": 50,
          "type": "string"
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The Id of the subject course this lesson is added to.",
          "type": "string",
          "x-nullable": false
        },
        "roomId": {
          "format": "uuid",
          "description": "Obsolete!\r\nIdentifier of the room where lesson is conducted.\r\nUse RoomIds instead of RoomId. RoomId will be removed in a future update.",
          "type": "string"
        },
        "roomIds": {
          "description": "The Ids of the rooms where the lesson is conducted.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "date": {
          "format": "date",
          "description": "Date of the lesson.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "teacherIds": {
          "description": "List of teacher' identifiers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        }
      }
    },
    "PagedResponse_AbsenceRegistrationExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbsenceRegistrationExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "PagedResponse_ActivityResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "PagedResponse_EducationalProgrammeExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EducationalProgrammeExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "PagedResponse_LessonExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LessonExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "PagedResponse_SchoolCourseExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchoolCourseExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "PagedResponse_SessionDto": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SessionDto"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "PagedResponse_StudentSubjectCoursesExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentSubjectCoursesExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "PagedResponse_SubjectCourseExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectCourseExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "PagedResponse_UnscheduledLessonExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnscheduledLessonExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "RegisterAbsenceExternalCommand": {
      "title": "RegisterAbsenceExternalCommand",
      "description": "Registers absence of student.",
      "required": [
        "absenceRegistered",
        "absenceRegistrations",
        "lessonId",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "lessonId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of lesson to register absence on.",
          "type": "string",
          "x-nullable": false
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the subject course the lesson is part of.",
          "type": "string",
          "x-nullable": false
        },
        "absenceRegistered": {
          "title": "Boolean",
          "description": "Has all absence been registered",
          "type": "boolean",
          "x-nullable": false
        },
        "absenceRegistrations": {
          "description": "The absence registrations on the lesson.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegisterAbsenceRegistrationDto"
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which command is performed.",
          "type": "string"
        }
      }
    },
    "RegisterAbsenceRegistrationDto": {
      "title": "RegisterAbsenceRegistrationDto",
      "required": [
        "approved",
        "minutes",
        "status",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The student to register absence for.",
          "type": "string",
          "x-nullable": false
        },
        "status": {
          "title": "AbsenceRegistrationStatus",
          "description": "Status of the absence registration:\r\n0 = Present\r\n1 = Absent\r\n2 = Partially absent",
          "enum": [
            "Present",
            "Absent",
            "PartialAbsence",
            "NotRegistered"
          ],
          "type": "string",
          "x-nullable": false
        },
        "minutes": {
          "format": "int32",
          "title": "Int32",
          "description": "How many minutes the student was absent for.\r\nMust be 0 if Status is not partially absent.",
          "type": "integer",
          "x-nullable": false
        },
        "approved": {
          "title": "Boolean",
          "description": "Whether the absence was approved.",
          "type": "boolean",
          "x-nullable": false
        },
        "comment": {
          "title": "String",
          "description": "Educator's or optionally Administrative employee's comment regarding the absence.",
          "type": "string"
        }
      }
    },
    "SchoolCourseExternalResponse": {
      "title": "SchoolCourseExternalResponse",
      "description": "Details of a school course",
      "required": [
        "areaOfEducationId",
        "areaOfResponsibilityId",
        "dayCalendarId",
        "departmentId",
        "endDate",
        "schoolCourseId",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "schoolCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the school course",
          "type": "string",
          "x-nullable": false
        },
        "name": {
          "title": "String",
          "description": "Name of the school course",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "School course start date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "School course end date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "uvmDepartmentNumber": {
          "title": "String",
          "description": "UVM department number on the school course",
          "type": "string"
        },
        "dsDepartmentNumber": {
          "title": "String",
          "description": "DS department number on the school course",
          "type": "string"
        },
        "schoolPeriod": {
          "description": "School period of the school course",
          "allOf": [
            {
              "$ref": "#/definitions/SchoolCourse_SchoolPeriodDto"
            }
          ]
        },
        "dayCalendarId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the day calendar assigned to the school course",
          "type": "string",
          "x-nullable": false
        },
        "departmentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the Studica department the school course is assigned to",
          "type": "string",
          "x-nullable": false
        },
        "areaOfEducationId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the area of education the school course is assigned to",
          "type": "string",
          "x-nullable": false
        },
        "areaOfResponsibilityId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the area of responsibility the school course is assigned to",
          "type": "string",
          "x-nullable": false
        },
        "studentIds": {
          "description": "List of ids of students that are assigned to the school course",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "countingPeriods": {
          "description": "List of activity counting periods for the school course",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchoolCourse_CountingPeriodDto"
          }
        },
        "deletedAt": {
          "format": "date-time",
          "description": "If the school course has been deleted, this property will have a value",
          "type": "string"
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When it was created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of the school course's basic information",
          "type": "string"
        }
      }
    },
    "SchoolCourse_CountingPeriodDto": {
      "title": "SchoolCourse_CountingPeriodDto",
      "required": [
        "countingDate",
        "duration",
        "endDate",
        "number",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "number": {
          "format": "int32",
          "title": "Int32",
          "type": "integer",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "countingDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "duration": {
          "format": "double",
          "title": "Decimal",
          "type": "number",
          "x-nullable": false
        }
      }
    },
    "SchoolCourse_SchoolPeriodDto": {
      "title": "SchoolCourse_SchoolPeriodDto",
      "type": "object",
      "properties": {
        "name": {
          "title": "String",
          "description": "The name of the school period",
          "type": "string"
        },
        "typeName": {
          "title": "String",
          "description": "The name of the school period type.",
          "type": "string"
        },
        "typeCode": {
          "title": "String",
          "description": "The type of the school period.",
          "type": "string"
        }
      }
    },
    "SchoolCoursesExternalRequest": {
      "title": "SchoolCoursesExternalRequest",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "periodFrom",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "periodFrom": {
          "format": "date",
          "title": "Date",
          "description": "School courses start on or after this date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "periodTo": {
          "format": "date",
          "description": "School courses must end on or before this date\r\nProperty is nullable",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "includeDeletedSchoolCourses": {
          "description": "Should the response include deleted educational programmes",
          "type": "boolean"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "SessionDto": {
      "title": "SessionDto",
      "required": [
        "sessionEntityType",
        "sessionId"
      ],
      "type": "object",
      "properties": {
        "sessionId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The id of the session.",
          "type": "string",
          "x-nullable": false
        },
        "sessionEntityType": {
          "title": "SessionEntityType",
          "description": "The type of session entity which is associated with this session.",
          "enum": [
            "SubjectCourse",
            "None"
          ],
          "type": "string",
          "x-nullable": false
        },
        "sessionEntityId": {
          "format": "uuid",
          "description": "The id of the entity which is associated with this session. If the type\r\nis None then this value is null, otherwise it has a value.\r\n\r\nIf there are more than one related session entity, the first is returned.",
          "type": "string"
        },
        "sessionEntityIds": {
          "description": "The ids of the entities which are associated with this session. If the type\r\nis None then this value is empty.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "externalLessonId": {
          "title": "String",
          "description": "An exsternal id for the session",
          "type": "string"
        },
        "groupIds": {
          "description": "Ids of groups related to the session.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "roomIds": {
          "description": "Ids of rooms related to the session.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "teacherIds": {
          "description": "Ids of teachers related to the session.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "date": {
          "format": "date",
          "description": "The date when the session is held.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "The time when the session starts.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "The time when the session ends.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "schoolHourEntryId": {
          "format": "uuid",
          "description": "The id of the school hour entry which the session is scheduled to.",
          "type": "string"
        },
        "comment": {
          "title": "String",
          "description": "Any comments for the session.",
          "type": "string"
        }
      }
    },
    "SessionsByIdExternalRequest": {
      "title": "SessionsByIdExternalRequest",
      "description": "Get specific sessions by id.",
      "required": [
        "schoolCode",
        "sessionIds"
      ],
      "type": "object",
      "properties": {
        "sessionIds": {
          "description": "The ids of the sessions to retrieve.",
          "maxItems": 1000,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "SessionsExternalRequest": {
      "title": "SessionsExternalRequest",
      "description": "Get sessions.",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "groupIds": {
          "description": "If specified, returns sessions which have at least one of the specific groups.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "teacherIds": {
          "description": "If specified, returns sessions which have at least one of the specific teachers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "roomIds": {
          "description": "If specified, returns sessions which have at least one of the specific rooms.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "dateFrom": {
          "format": "date",
          "description": "If specified, returns sessions which are planned on a date no earlier than this.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "dateTo": {
          "format": "date",
          "description": "If specified, returns sessions which are planned on a date no later than this.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "StudentActivityReportsExternalRequest": {
      "title": "StudentActivityReportsExternalRequest",
      "description": "Returns reports containing activities for students",
      "required": [
        "periodFrom",
        "periodTo",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "periodFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of period for activity report quarters.\r\nThe `PeriodFrom` parameter must be a date that is on or before given activity report period\r\nto include the desired report in the output.\r\nE.g. if specifying PeriodFrom as 2021-01-01 and PeriodTo as 2021-06-30\r\nyou will only get the activity report for 2nd period of 2021 (March 16 to June 15)",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "periodTo": {
          "format": "date",
          "title": "Date",
          "description": "End of period for activity report quarters. The `PeriodTo` parameter must fully encompass\r\nthe end date of a given activity report quarter to include the desired report in the output.\r\nE.g. to get all activity reports for 2020 the PeriodFrom could be 2019-12-15\r\nand PeriodTo could be 2020-12-30",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "StudentActivityReportsV2ExternalRequest": {
      "title": "StudentActivityReportsV2ExternalRequest",
      "description": "Returns V2 activity reports containing activities for students",
      "required": [
        "periodFrom",
        "periodTo",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "periodFrom": {
          "format": "date",
          "title": "Date",
          "description": "Includes reports for periods with a transmission period start date no earlier than `PeriodFrom`",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "periodTo": {
          "format": "date",
          "title": "Date",
          "description": "Includes reports for periods with a transmission period start date no later than `PeriodFromTo`",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "StudentInternshipExternalRequest": {
      "title": "StudentInternshipExternalRequest",
      "description": "Returns a list of students having written agreements and school based internships in the specified period",
      "required": [
        "periodFrom",
        "periodTo",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "periodFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of the range for start date of the students' internships.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "periodTo": {
          "format": "date",
          "title": "Date",
          "description": "End of the range for start date of the students' internships.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "StudentInternshipExternalResponse": {
      "title": "StudentInternshipExternalResponse",
      "description": "Model of a student's internship agreements and school based periods",
      "required": [
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of student",
          "type": "string",
          "x-nullable": false
        },
        "civilRegistrationNumber": {
          "title": "String",
          "description": "Students civil registration number",
          "type": "string"
        },
        "givenName": {
          "title": "String",
          "description": "Student's given name.",
          "type": "string"
        },
        "surname": {
          "title": "String",
          "description": "Student's surname.",
          "type": "string"
        },
        "writtenAgreements": {
          "description": "List of the student's written internship agreements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentInternship_WrittenAgreement"
          }
        },
        "schoolInternships": {
          "description": "List of school based internships for the student linked to the written agreement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentInternship_SchoolInternship"
          }
        },
        "contributionPeriods": {
          "description": "List of contribution periods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentInternship_ContributionPeriodDto"
          }
        }
      }
    },
    "StudentInternship_ContributionPeriodDto": {
      "title": "StudentInternship_ContributionPeriodDto",
      "required": [
        "contribution",
        "contributionDays",
        "countingDate",
        "countingPeriodNumber",
        "endDate",
        "schoolInternshipId",
        "startDate",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "schoolInternshipId": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "countingPeriodNumber": {
          "format": "int32",
          "title": "Int32",
          "type": "integer",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "countingDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "contributionDays": {
          "format": "double",
          "title": "Decimal",
          "type": "number",
          "x-nullable": false
        },
        "contribution": {
          "format": "double",
          "title": "Decimal",
          "type": "number",
          "x-nullable": false
        },
        "remainingContribution": {
          "format": "double",
          "type": "number"
        },
        "accountingCoesa": {
          "title": "String",
          "type": "string"
        }
      }
    },
    "StudentInternship_SchoolInternship": {
      "title": "StudentInternship_SchoolInternship",
      "description": "Details of a school based internship for a student",
      "required": [
        "endDate",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "String",
          "description": "Name of the school based internship",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the school based internship",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date of the school based internship",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        }
      }
    },
    "StudentInternship_WrittenAgreement": {
      "title": "StudentInternship_WrittenAgreement",
      "description": "A student's written agreement for school based internship",
      "required": [
        "endDate",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "agreementType": {
          "title": "String",
          "description": "The written agreement's internship type",
          "type": "string"
        },
        "agreementTypeDescription": {
          "title": "String",
          "description": "Textual description of the internship type",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of internship",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date for internship",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "placeOfInternshipName": {
          "title": "String",
          "description": "The name of the company where the internship takes place.",
          "type": "string"
        },
        "placeOfInternshipCvrNumber": {
          "title": "String",
          "description": "The CVR number of the company where the internship takes place.",
          "type": "string"
        },
        "placeOfInternshipEmail": {
          "title": "String",
          "description": "The contact email address of the company where the internship takes place.",
          "type": "string"
        },
        "placeOfInternshipSerialNumber": {
          "title": "String",
          "description": "The serial number of the internship.",
          "type": "string"
        },
        "seNumber": {
          "title": "String",
          "description": "The salary number for the internship.",
          "type": "string"
        },
        "placeOfInternshipAddress": {
          "title": "String",
          "description": "The address of the place of internship.",
          "type": "string"
        },
        "placeOfInternshipCity": {
          "title": "String",
          "description": "The city of the place of internship.",
          "type": "string"
        },
        "placeOfInternshipPostalCode": {
          "title": "String",
          "description": "The postal code of the place of internship.",
          "type": "string"
        }
      }
    },
    "StudentSchoolCourse_ContributionPeriodDto": {
      "title": "StudentSchoolCourse_ContributionPeriodDto",
      "required": [
        "contribution",
        "contributionDays",
        "countingDate",
        "countingPeriodNumber",
        "endDate",
        "schoolCourseId",
        "startDate",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "schoolCourseId": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "countingPeriodNumber": {
          "format": "int32",
          "title": "Int32",
          "type": "integer",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "countingDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "contributionDays": {
          "format": "double",
          "title": "Decimal",
          "type": "number",
          "x-nullable": false
        },
        "contribution": {
          "format": "double",
          "title": "Decimal",
          "type": "number",
          "x-nullable": false
        },
        "remainingContribution": {
          "format": "double",
          "type": "number"
        },
        "accountingCoesa": {
          "title": "String",
          "type": "string"
        }
      }
    },
    "StudentSchoolCourse_Participation": {
      "title": "StudentSchoolCourse_Participation",
      "description": "Details of a student's participation period of a school course",
      "required": [
        "participationEndDate",
        "participationStartDate",
        "schoolCourseId"
      ],
      "type": "object",
      "properties": {
        "schoolCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the school course referencing the participation period",
          "type": "string",
          "x-nullable": false
        },
        "participationStartDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the participation period",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "participationEndDate": {
          "format": "date",
          "title": "Date",
          "description": "End date of the participation period",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "correctedDuration": {
          "format": "double",
          "description": "Corrected duration of the participation period in days",
          "type": "number"
        },
        "schoolPeriod": {
          "description": "School period of the participation period",
          "allOf": [
            {
              "$ref": "#/definitions/SchoolCourse_SchoolPeriodDto"
            }
          ]
        }
      }
    },
    "StudentSchoolCoursesExternalRequest": {
      "title": "StudentSchoolCoursesExternalRequest",
      "description": "Returns a list of students with students and the school periods they are attending\r\nwhich lies within the start and end interval of the specified period",
      "required": [
        "periodFrom",
        "periodTo",
        "schoolCode",
        "studentIds"
      ],
      "type": "object",
      "properties": {
        "studentIds": {
          "description": "Student ids for bulk query. Must contain 1 to 1000 elements",
          "maxItems": 1000,
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "periodFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of the range for start date of the students' school courses.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "periodTo": {
          "format": "date",
          "title": "Date",
          "description": "End of the range for start date of the students' school courses.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "StudentSchoolCoursesExternalResponse": {
      "title": "StudentSchoolCoursesExternalResponse",
      "description": "Details of a students school course participation periods",
      "required": [
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of student",
          "type": "string",
          "x-nullable": false
        },
        "civilRegistrationNumber": {
          "title": "String",
          "description": "Student's civil registration number (CPR)",
          "type": "string"
        },
        "schoolCourseParticipations": {
          "description": "List of school course participation periods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentSchoolCourse_Participation"
          }
        },
        "contributionPeriods": {
          "description": "List of contribution periods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentSchoolCourse_ContributionPeriodDto"
          }
        }
      }
    },
    "StudentSubjectCoursesExternalRequest": {
      "title": "StudentSubjectCoursesExternalRequest",
      "description": "Returns a list of students and the subject courses they have been assigned to",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode",
        "studentIds"
      ],
      "type": "object",
      "properties": {
        "studentIds": {
          "description": "A list of students to get subject courses for",
          "maxItems": 1000,
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "StudentSubjectCoursesExternalResponse": {
      "title": "StudentSubjectCoursesExternalResponse",
      "description": "Model of a subject course assigned to a student",
      "required": [
        "studentId",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the student.",
          "type": "string",
          "x-nullable": false
        },
        "studentParticipationStartDate": {
          "format": "date",
          "description": "Start date for student participating in the course",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "studentParticipationEndDate": {
          "format": "date",
          "description": "End date for student participating in the course",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the subject course",
          "type": "string",
          "x-nullable": false
        },
        "subjectCourseName": {
          "title": "String",
          "description": "Name of the subject course",
          "type": "string"
        },
        "subjectCourseDesignation": {
          "title": "String",
          "description": "Designation of the subject course",
          "type": "string"
        }
      }
    },
    "SubjectCourseExternalResponse": {
      "title": "SubjectCourseExternalResponse",
      "description": "Model of the subject course.",
      "required": [
        "associatedEducationalProgrammeIds",
        "educationalProgrammeId",
        "endDate",
        "groups",
        "id",
        "isBridgingCourse",
        "lmsIndicator",
        "name",
        "participants",
        "startDate",
        "students",
        "teachersIds"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the subject course.",
          "type": "string",
          "x-nullable": false
        },
        "designation": {
          "title": "String",
          "description": "The designation (user facing unique id) of the subject course",
          "type": "string"
        },
        "educationalProgrammeId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the default associated educational programme.",
          "type": "string",
          "x-nullable": false
        },
        "defaultSubjectId": {
          "format": "uuid",
          "description": "The id of the default subject for this subject course.",
          "type": "string"
        },
        "name": {
          "title": "String",
          "description": "Name of the subject course.",
          "minLength": 1,
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the subject course.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date for the subject course.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "lmsIndicator": {
          "title": "Boolean",
          "description": "Is the entity to be created in the LMS.",
          "type": "boolean",
          "x-nullable": false
        },
        "deletedAt": {
          "format": "date-time",
          "description": "If the subject course has been deleted, this property will have a value",
          "type": "string"
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When it was created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of the subject course's basic information",
          "type": "string"
        },
        "students": {
          "description": "Assigned students.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectCourseExternalResponse_Student"
          }
        },
        "teachersIds": {
          "description": "Reference ids to assigned teachers.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "isBridgingCourse": {
          "title": "Boolean",
          "description": "Indicates that this is a bridging course",
          "type": "boolean",
          "x-nullable": false
        },
        "associatedEducationalProgrammeIds": {
          "description": "Ids of all associated educational programmes",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "groups": {
          "description": "The groups of students participating in the subject course. Includes multiple\r\nlevels of groups when available.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectCourseExternalResponse_Group"
          }
        },
        "participants": {
          "description": "The participants for the entire subject course.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectCourseExternalResponse_Student"
          }
        }
      }
    },
    "SubjectCourseExternalResponse_Group": {
      "title": "SubjectCourseExternalResponse_Group",
      "description": "Model of a group of students on the subject course.",
      "required": [
        "endDate",
        "groupId",
        "lmsIndicator",
        "numberOfSessions",
        "participants",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "groupId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The id of the group.",
          "type": "string",
          "x-nullable": false
        },
        "name": {
          "title": "String",
          "description": "The name of the group.",
          "type": "string"
        },
        "displayName": {
          "title": "String",
          "description": "The group's display name.\r\nThe name is a combination of the subject course's name and name of the group",
          "type": "string"
        },
        "designation": {
          "title": "String",
          "description": "The group's designation.\r\nThe designation is a combination of the subject course's designation and name of the group",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "The start date of the group.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "The end date of the group.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "parentGroupId": {
          "format": "uuid",
          "description": "The parent group, if any. Only the top\r\nlevel groups will not have a parent id.",
          "type": "string"
        },
        "numberOfSessions": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of sessions defined for this group.",
          "type": "integer",
          "x-nullable": false
        },
        "lmsIndicator": {
          "title": "Boolean",
          "description": "Is the entity to be created in the LMS.",
          "type": "boolean",
          "x-nullable": false
        },
        "participants": {
          "description": "The participants for the group.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubjectCourseExternalResponse_GroupStudent"
          }
        }
      }
    },
    "SubjectCourseExternalResponse_GroupStudent": {
      "title": "SubjectCourseExternalResponse_GroupStudent",
      "description": "Model of a student participating in a group.",
      "required": [
        "courseStudentType",
        "endDate",
        "startDate",
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The id of the student participating in the group.",
          "type": "string",
          "x-nullable": false
        },
        "courseStudentType": {
          "title": "CourseStudentType",
          "description": "The type of student which the student id refers to.",
          "enum": [
            "Student",
            "BridgingCourseStudent",
            "Employee",
            "ExternalBoardingFacilityStudent"
          ],
          "type": "string",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "The start date of the particiaption.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "The end date of the participation.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        }
      }
    },
    "SubjectCourseExternalResponse_Student": {
      "title": "SubjectCourseExternalResponse_Student",
      "description": "Model of the student assigned to a subject course.",
      "required": [
        "courseStudentType",
        "endDate",
        "startDate",
        "studentId",
        "usePeriodFromSubjectCourse"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the student.",
          "type": "string",
          "x-nullable": false
        },
        "courseStudentType": {
          "title": "CourseStudentType",
          "description": "The type of student which the student id refers to.",
          "enum": [
            "Student",
            "BridgingCourseStudent",
            "Employee",
            "ExternalBoardingFacilityStudent"
          ],
          "type": "string",
          "x-nullable": false
        },
        "uvmSubject": {
          "description": "Subject that student is assigned to.",
          "allOf": [
            {
              "$ref": "#/definitions/UVMSubjectDetails"
            }
          ]
        },
        "usePeriodFromSubjectCourse": {
          "title": "Boolean",
          "description": "Flag indicating, whether period should be taken from subject course.",
          "type": "boolean",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the period.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date of the period.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        }
      }
    },
    "SubjectCoursesExternalRequest": {
      "title": "SubjectCoursesExternalRequest",
      "description": "Returns a paged list of subject courses satisfying provided criteria.",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode",
        "startDateFrom",
        "startDateTo"
      ],
      "type": "object",
      "properties": {
        "startDateFrom": {
          "format": "date",
          "title": "Date",
          "description": "Beginning of the range for start date subject courses.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "startDateTo": {
          "format": "date",
          "title": "Date",
          "description": "End of the range for start date subject courses.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000",
          "x-nullable": false
        },
        "lmsIndicator": {
          "description": "Is the entity to be created in the LMS.\r\nIf not specified, then the value of the LMS indicator is disregarded in the filtering.",
          "type": "boolean"
        },
        "includeDeletedSubjectCourses": {
          "description": "Should the response include deleted subject courses",
          "type": "boolean"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "UVMSubjectDetails": {
      "title": "UVMSubjectDetails",
      "required": [
        "canOverwriteDuration",
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Unique identification of subject course",
          "type": "string",
          "x-nullable": false
        },
        "subject": {
          "title": "String",
          "description": "Subject code (Fagnummer) from UMO",
          "type": "string"
        },
        "description": {
          "title": "String",
          "description": "UVM subject description",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "description": "Possible start date of UVM subject",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "endDate": {
          "format": "date",
          "description": "Possible end date of UVM subject",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "canOverwriteDuration": {
          "title": "Boolean",
          "description": "Is it possible to have a locally defined duration of this subject",
          "type": "boolean",
          "x-nullable": false
        },
        "durationInDays": {
          "format": "double",
          "description": "Possible duration of subject in days. \r\nThis is used for EUD. \r\nCan be null. In this case look at Programmes.Host.ExternalApi.SubjectCourses.Queries.SubjectCourses.UVMSubjectDetails.DurationInHours",
          "type": "number"
        },
        "durationInHours": {
          "format": "double",
          "description": "Possible duration of subject in hours. \r\nThis us used for Adult Education Center (VUC)\r\nCan be null. In this case look at Programmes.Host.ExternalApi.SubjectCourses.Queries.SubjectCourses.UVMSubjectDetails.DurationInDays",
          "type": "number"
        },
        "levelDetails": {
          "description": "Detailed information about the level the subject\r\nis taken on.",
          "allOf": [
            {
              "$ref": "#/definitions/LevelDetails"
            }
          ]
        }
      }
    },
    "UnscheduledLessonExternalResponse": {
      "title": "UnscheduledLessonExternalResponse",
      "description": "The model of lesson.",
      "required": [
        "id",
        "subjectCourseId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Unique identifier.",
          "type": "string",
          "x-nullable": false
        },
        "externalLessonId": {
          "title": "String",
          "description": "External identifier set by partners to allow them to match it with the lessons known by them.",
          "type": "string"
        },
        "subjectCourseId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Reference to the subject course that lesson is part of.",
          "type": "string",
          "x-nullable": false
        },
        "subjectCourseIds": {
          "description": "The ids of the subject courses which are associated with this session.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "roomId": {
          "format": "uuid",
          "description": "Obsolete!\r\nReference to the room where lesson is conducted.\r\nUse RoomIds instead of RoomId. RoomId will be removed in a future update.",
          "type": "string"
        },
        "roomIds": {
          "description": "The ids of the rooms where the lesson is conducted.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "date": {
          "format": "date",
          "description": "Date of the lesson.",
          "type": "string",
          "example": "2023-01-25T00:00:00.0000000"
        },
        "startTime": {
          "format": "time",
          "description": "Start time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "endTime": {
          "format": "time",
          "description": "End time of the lesson.",
          "pattern": "([01]?[0-9]|2[0-3]):[0-5][0-9]",
          "type": "string",
          "example": "14:15"
        },
        "teachersIds": {
          "description": "Teachers assigned to the lesson.",
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        }
      }
    },
    "UnscheduledLessonsExternalRequest": {
      "title": "UnscheduledLessonsExternalRequest",
      "description": "Returns a paged list of unscheduled lessons satisfying provided criteria.",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "departmentId": {
          "format": "uuid",
          "description": "Department where the lesson is conducted.",
          "type": "string"
        },
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}