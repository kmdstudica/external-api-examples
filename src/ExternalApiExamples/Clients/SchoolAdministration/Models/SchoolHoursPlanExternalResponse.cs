// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.SchoolAdministration.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// SchoolHoursPlanExternalResponse
    /// </summary>
    /// <remarks>
    /// Model of the school hours plan.
    /// </remarks>
    public partial class SchoolHoursPlanExternalResponse
    {
        /// <summary>
        /// Initializes a new instance of the SchoolHoursPlanExternalResponse
        /// class.
        /// </summary>
        public SchoolHoursPlanExternalResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SchoolHoursPlanExternalResponse
        /// class.
        /// </summary>
        /// <param name="id">Guid</param>
        /// <param name="name">String</param>
        /// <param name="startTime">String</param>
        /// <param name="lectureDurationInMinutes">Int32</param>
        /// <param name="hasLecturesOnMondays">Boolean</param>
        /// <param name="hasLecturesOnTuesdays">Boolean</param>
        /// <param name="hasLecturesOnWednesdays">Boolean</param>
        /// <param name="hasLecturesOnThursdays">Boolean</param>
        /// <param name="hasLecturesOnFridays">Boolean</param>
        /// <param name="hasLecturesOnSaturdays">Boolean</param>
        /// <param name="hasLecturesOnSundays">Boolean</param>
        /// <param name="insertedAt">When was the school hours plan
        /// created</param>
        /// <param name="updatedAt">Last update of the school hours
        /// plan</param>
        public SchoolHoursPlanExternalResponse(System.Guid id, string name, string startTime, int lectureDurationInMinutes, bool hasLecturesOnMondays, bool hasLecturesOnTuesdays, bool hasLecturesOnWednesdays, bool hasLecturesOnThursdays, bool hasLecturesOnFridays, bool hasLecturesOnSaturdays, bool hasLecturesOnSundays, System.DateTime? insertedAt = default(System.DateTime?), System.DateTime? updatedAt = default(System.DateTime?))
        {
            Id = id;
            Name = name;
            StartTime = startTime;
            LectureDurationInMinutes = lectureDurationInMinutes;
            HasLecturesOnMondays = hasLecturesOnMondays;
            HasLecturesOnTuesdays = hasLecturesOnTuesdays;
            HasLecturesOnWednesdays = hasLecturesOnWednesdays;
            HasLecturesOnThursdays = hasLecturesOnThursdays;
            HasLecturesOnFridays = hasLecturesOnFridays;
            HasLecturesOnSaturdays = hasLecturesOnSaturdays;
            HasLecturesOnSundays = hasLecturesOnSundays;
            InsertedAt = insertedAt;
            UpdatedAt = updatedAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Id of the school hours plan.
        /// </remarks>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Name of the school hours plan.
        /// </remarks>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Start time for school day.
        /// </remarks>
        [JsonProperty(PropertyName = "startTime")]
        public string StartTime { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// Duration of a lecture in minutes.
        /// </remarks>
        [JsonProperty(PropertyName = "lectureDurationInMinutes")]
        public int LectureDurationInMinutes { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether Mondays are school days.
        /// </remarks>
        [JsonProperty(PropertyName = "hasLecturesOnMondays")]
        public bool HasLecturesOnMondays { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether Tuesdays are school days.
        /// </remarks>
        [JsonProperty(PropertyName = "hasLecturesOnTuesdays")]
        public bool HasLecturesOnTuesdays { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether Wednesdays are school-days.
        /// </remarks>
        [JsonProperty(PropertyName = "hasLecturesOnWednesdays")]
        public bool HasLecturesOnWednesdays { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether Thursdays are school days.
        /// </remarks>
        [JsonProperty(PropertyName = "hasLecturesOnThursdays")]
        public bool HasLecturesOnThursdays { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether Fridays are school days.
        /// </remarks>
        [JsonProperty(PropertyName = "hasLecturesOnFridays")]
        public bool HasLecturesOnFridays { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether Saturdays are school days.
        /// </remarks>
        [JsonProperty(PropertyName = "hasLecturesOnSaturdays")]
        public bool HasLecturesOnSaturdays { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether Sundays are school days.
        /// </remarks>
        [JsonProperty(PropertyName = "hasLecturesOnSundays")]
        public bool HasLecturesOnSundays { get; set; }

        /// <summary>
        /// Gets or sets when was the school hours plan created
        /// </summary>
        [JsonProperty(PropertyName = "insertedAt")]
        public System.DateTime? InsertedAt { get; set; }

        /// <summary>
        /// Gets or sets last update of the school hours plan
        /// </summary>
        [JsonProperty(PropertyName = "updatedAt")]
        public System.DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (StartTime == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StartTime");
            }
            if (Name != null)
            {
                if (Name.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Name", 1);
                }
            }
            if (StartTime != null)
            {
                if (StartTime.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "StartTime", 1);
                }
            }
            if (LectureDurationInMinutes > 1440)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "LectureDurationInMinutes", 1440);
            }
            if (LectureDurationInMinutes < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "LectureDurationInMinutes", 1);
            }
        }
    }
}
