// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.SchoolInternships.Client
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for KMDStudicaSchoolInternships.
    /// </summary>
    public static partial class KMDStudicaSchoolInternshipsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static PagedResponseInternshipDepartmentsExternalResponse Post(this IKMDStudicaSchoolInternships operations, ActiveInternshipDepartmentsExternalRequest body = default(ActiveInternshipDepartmentsExternalRequest))
            {
                return operations.PostAsync(body).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PagedResponseInternshipDepartmentsExternalResponse> PostAsync(this IKMDStudicaSchoolInternships operations, ActiveInternshipDepartmentsExternalRequest body = default(ActiveInternshipDepartmentsExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='internshipDepartmentIds'>
            /// The ids of the internship departments to query for.
            /// </param>
            /// <param name='schoolCode'>
            /// String The school code for which to get data.
            /// </param>
            public static IList<InternshipDepartmentsExternalResponse> Post1(this IKMDStudicaSchoolInternships operations, IList<System.Guid> internshipDepartmentIds, string schoolCode)
            {
                return operations.Post1Async(internshipDepartmentIds, schoolCode).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='internshipDepartmentIds'>
            /// The ids of the internship departments to query for.
            /// </param>
            /// <param name='schoolCode'>
            /// String The school code for which to get data.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<InternshipDepartmentsExternalResponse>> Post1Async(this IKMDStudicaSchoolInternships operations, IList<System.Guid> internshipDepartmentIds, string schoolCode, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post1WithHttpMessagesAsync(internshipDepartmentIds, schoolCode, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static IList<StudentInternshipsExternalResponse> Post2(this IKMDStudicaSchoolInternships operations, StudentInternshipsExternalRequest body = default(StudentInternshipsExternalRequest))
            {
                return operations.Post2Async(body).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<StudentInternshipsExternalResponse>> Post2Async(this IKMDStudicaSchoolInternships operations, StudentInternshipsExternalRequest body = default(StudentInternshipsExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post2WithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static IList<StudentInternshipsExternalV2Response> Post3(this IKMDStudicaSchoolInternships operations, StudentInternshipsExternalV2Request body = default(StudentInternshipsExternalV2Request))
            {
                return operations.Post3Async(body).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<StudentInternshipsExternalV2Response>> Post3Async(this IKMDStudicaSchoolInternships operations, StudentInternshipsExternalV2Request body = default(StudentInternshipsExternalV2Request), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post3WithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static IList<StudentsInternshipAbsenceExternalResponse> Post4(this IKMDStudicaSchoolInternships operations, StudentsInternshipAbsenceExternalRequest body = default(StudentsInternshipAbsenceExternalRequest))
            {
                return operations.Post4Async(body).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<StudentsInternshipAbsenceExternalResponse>> Post4Async(this IKMDStudicaSchoolInternships operations, StudentsInternshipAbsenceExternalRequest body = default(StudentsInternshipAbsenceExternalRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Post4WithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
