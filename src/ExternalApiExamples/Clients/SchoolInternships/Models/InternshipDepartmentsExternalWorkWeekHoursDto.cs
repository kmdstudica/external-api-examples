// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.SchoolInternships.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// InternshipDepartmentsExternalWorkWeekHoursDto
    /// </summary>
    /// <remarks>
    /// A specification of work week hours valid from a specific date.
    /// </remarks>
    public partial class InternshipDepartmentsExternalWorkWeekHoursDto
    {
        /// <summary>
        /// Initializes a new instance of the
        /// InternshipDepartmentsExternalWorkWeekHoursDto class.
        /// </summary>
        public InternshipDepartmentsExternalWorkWeekHoursDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// InternshipDepartmentsExternalWorkWeekHoursDto class.
        /// </summary>
        /// <param name="validFrom">Date</param>
        /// <param name="minutesOnMonday">Int32</param>
        /// <param name="minutesOnTuesday">Int32</param>
        /// <param name="minutesOnWednesday">Int32</param>
        /// <param name="minutesOnThursday">Int32</param>
        /// <param name="minutesOnFriday">Int32</param>
        /// <param name="minutesOnSaturday">Int32</param>
        /// <param name="minutesOnSunday">Int32</param>
        public InternshipDepartmentsExternalWorkWeekHoursDto(System.DateTime validFrom, int minutesOnMonday, int minutesOnTuesday, int minutesOnWednesday, int minutesOnThursday, int minutesOnFriday, int minutesOnSaturday, int minutesOnSunday)
        {
            ValidFrom = validFrom;
            MinutesOnMonday = minutesOnMonday;
            MinutesOnTuesday = minutesOnTuesday;
            MinutesOnWednesday = minutesOnWednesday;
            MinutesOnThursday = minutesOnThursday;
            MinutesOnFriday = minutesOnFriday;
            MinutesOnSaturday = minutesOnSaturday;
            MinutesOnSunday = minutesOnSunday;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets date
        /// </summary>
        /// <remarks>
        /// The date from which the hours are effective.
        /// </remarks>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "validFrom")]
        public System.DateTime ValidFrom { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// The duration of work on Mondays.
        /// </remarks>
        [JsonProperty(PropertyName = "minutesOnMonday")]
        public int MinutesOnMonday { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// The duration of work on Tuesdays.
        /// </remarks>
        [JsonProperty(PropertyName = "minutesOnTuesday")]
        public int MinutesOnTuesday { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// The duration of work on Wednesdays.
        /// </remarks>
        [JsonProperty(PropertyName = "minutesOnWednesday")]
        public int MinutesOnWednesday { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// The duration of work on Thursdays.
        /// </remarks>
        [JsonProperty(PropertyName = "minutesOnThursday")]
        public int MinutesOnThursday { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// The duration of work on Fridays.
        /// </remarks>
        [JsonProperty(PropertyName = "minutesOnFriday")]
        public int MinutesOnFriday { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// The duration of work on Saturdays.
        /// </remarks>
        [JsonProperty(PropertyName = "minutesOnSaturday")]
        public int MinutesOnSaturday { get; set; }

        /// <summary>
        /// Gets or sets int32
        /// </summary>
        /// <remarks>
        /// The duration of work on Sundays.
        /// </remarks>
        [JsonProperty(PropertyName = "minutesOnSunday")]
        public int MinutesOnSunday { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
