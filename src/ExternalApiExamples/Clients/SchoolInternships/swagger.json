{
  "swagger": "2.0",
  "info": {
    "title": "KMD Studica - School Internships",
    "version": "v1"
  },
  "host": "kmd-logic-shareddev-apim.azure-api.net",
  "basePath": "/studica/school-internships/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/ActiveInternshipDepartmentsExternal": {
      "get": {
        "tags": [
          "ActiveInternshipDepartmentsExternal"
        ],
        "operationId": "ActiveInternshipDepartmentsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean",
            "default": true,
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_InternshipDepartmentsExternalResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ActiveInternshipDepartmentsExternal"
        ],
        "operationId": "_ActiveInternshipDepartmentsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ActiveInternshipDepartmentsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_InternshipDepartmentsExternalResponse"
            }
          }
        }
      }
    },
    "/BulkInternshipDepartmentsExternal": {
      "get": {
        "tags": [
          "BulkInternshipDepartmentsExternal"
        ],
        "operationId": "BulkInternshipDepartmentsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "InternshipDepartmentIds",
            "description": "The ids of the internship departments to query for.",
            "required": true,
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string",
              "x-nullable": false
            },
            "maxLength": 1000,
            "minLength": 1
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InternshipDepartmentsExternalResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BulkInternshipDepartmentsExternal"
        ],
        "operationId": "_BulkInternshipDepartmentsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkInternshipDepartmentsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InternshipDepartmentsExternalResponse"
              }
            }
          }
        }
      }
    },
    "/StudentInternshipsExternal": {
      "get": {
        "tags": [
          "StudentInternshipsExternal"
        ],
        "operationId": "StudentInternshipsExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PeriodFrom",
            "description": "Get all students school internships starting on or after this date",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PeriodTo",
            "description": "Get all students school internships ending on or before this date",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentInternshipsExternalResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StudentInternshipsExternal"
        ],
        "operationId": "_StudentInternshipsExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StudentInternshipsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentInternshipsExternalResponse"
              }
            }
          }
        }
      }
    },
    "/StudentInternshipsExternalV2": {
      "get": {
        "tags": [
          "StudentInternshipsExternalV2"
        ],
        "operationId": "StudentInternshipsExternalV2_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PeriodFrom",
            "description": "Get all students school internships starting on or after this date",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PeriodTo",
            "description": "Get all students school internships ending on or before this date",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentInternshipsExternalV2Response"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StudentInternshipsExternalV2"
        ],
        "operationId": "_StudentInternshipsExternalV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StudentInternshipsExternalV2Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentInternshipsExternalV2Response"
              }
            }
          }
        }
      }
    },
    "/StudentsInternshipAbsenceExternal": {
      "get": {
        "tags": [
          "StudentsInternshipAbsenceExternal"
        ],
        "operationId": "StudentsInternshipAbsenceExternal_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "PeriodFrom",
            "description": "Get all students school internships absence starting on or after this date",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "PeriodTo",
            "description": "Get all students school internships absence ending on or before this date",
            "required": true,
            "type": "string",
            "format": "date",
            "x-nullable": false
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentsInternshipAbsenceExternalResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StudentsInternshipAbsenceExternal"
        ],
        "operationId": "_StudentsInternshipAbsenceExternal_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StudentsInternshipAbsenceExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentsInternshipAbsenceExternalResponse"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActiveInternshipDepartmentsExternalRequest": {
      "title": "ActiveInternshipDepartmentsExternalRequest",
      "description": "Get a list of all the school's active internship departments.",
      "required": [
        "inlineCount",
        "pageNumber",
        "pageSize",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "pageNumber": {
          "format": "int32",
          "title": "Int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "title": "Int32",
          "description": "Number of objects per page.",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "title": "Boolean",
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "BulkInternshipDepartmentsExternalRequest": {
      "title": "BulkInternshipDepartmentsExternalRequest",
      "description": "Get information about specific internship departments.",
      "required": [
        "internshipDepartmentIds",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "internshipDepartmentIds": {
          "description": "The ids of the internship departments to query for.",
          "maxItems": 1000,
          "minItems": 1,
          "type": "array",
          "items": {
            "format": "uuid",
            "title": "Guid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "InternshipDepartmentsExternalResponse": {
      "title": "InternshipDepartmentsExternalResponse",
      "description": "Model of internship department.",
      "required": [
        "dayCalendarId",
        "id",
        "name",
        "uvmDepartmentNumber",
        "validFrom",
        "workWeekHours"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "The department id.",
          "type": "string",
          "x-nullable": false
        },
        "name": {
          "title": "String",
          "description": "The name of the department.",
          "minLength": 1,
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "title": "Date",
          "description": "The date from which the department is active.",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "validTo": {
          "format": "date",
          "description": "The date which the department is active to, if it has been deactivated.",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000"
        },
        "dayCalendarId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The id of the associated day calendar.",
          "type": "string",
          "x-nullable": false
        },
        "uvmDepartmentNumber": {
          "title": "String",
          "description": "The associated UVM department number.",
          "minLength": 1,
          "type": "string"
        },
        "areaOfResponsibilityId": {
          "format": "uuid",
          "description": "The id of the associated area of responsibility.",
          "type": "string"
        },
        "workWeekHours": {
          "description": "All associated work week hours.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternshipDepartmentsExternalWorkWeekHoursDto"
          }
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When it was created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of the department's information",
          "type": "string"
        }
      }
    },
    "InternshipDepartmentsExternalWorkWeekHoursDto": {
      "title": "InternshipDepartmentsExternalWorkWeekHoursDto",
      "description": "A specification of work week hours valid from a specific date.",
      "required": [
        "minutesOnFriday",
        "minutesOnMonday",
        "minutesOnSaturday",
        "minutesOnSunday",
        "minutesOnThursday",
        "minutesOnTuesday",
        "minutesOnWednesday",
        "validFrom"
      ],
      "type": "object",
      "properties": {
        "validFrom": {
          "format": "date",
          "title": "Date",
          "description": "The date from which the hours are effective.",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "minutesOnMonday": {
          "format": "int32",
          "title": "Int32",
          "description": "The duration of work on Mondays.",
          "type": "integer",
          "x-nullable": false
        },
        "minutesOnTuesday": {
          "format": "int32",
          "title": "Int32",
          "description": "The duration of work on Tuesdays.",
          "type": "integer",
          "x-nullable": false
        },
        "minutesOnWednesday": {
          "format": "int32",
          "title": "Int32",
          "description": "The duration of work on Wednesdays.",
          "type": "integer",
          "x-nullable": false
        },
        "minutesOnThursday": {
          "format": "int32",
          "title": "Int32",
          "description": "The duration of work on Thursdays.",
          "type": "integer",
          "x-nullable": false
        },
        "minutesOnFriday": {
          "format": "int32",
          "title": "Int32",
          "description": "The duration of work on Fridays.",
          "type": "integer",
          "x-nullable": false
        },
        "minutesOnSaturday": {
          "format": "int32",
          "title": "Int32",
          "description": "The duration of work on Saturdays.",
          "type": "integer",
          "x-nullable": false
        },
        "minutesOnSunday": {
          "format": "int32",
          "title": "Int32",
          "description": "The duration of work on Sundays.",
          "type": "integer",
          "x-nullable": false
        }
      }
    },
    "PagedResponse_InternshipDepartmentsExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternshipDepartmentsExternalResponse"
          }
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer"
        }
      }
    },
    "StudentInternshipsAgreementDtoV2": {
      "title": "StudentInternshipsAgreementDtoV2",
      "description": "A student's agreement for school based internship",
      "required": [
        "agreementId",
        "agreementType",
        "endDate",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "agreementId": {
          "format": "uuid",
          "title": "Guid",
          "type": "string",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "type": "string"
        },
        "apprenticeshipEducationalProgrammeId": {
          "format": "uuid",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "comment": {
          "title": "String",
          "type": "string"
        },
        "agreementType": {
          "title": "ApprenticeshipAgreementType",
          "enum": [
            "EducationalAgreement",
            "CombinationAgreement",
            "SchoolInternshipAgreement",
            "InternshipAbroadAgreement",
            "FguEudProgrammeAgreement",
            "CompanyPlacedInternshipAgreement",
            "CompanyPlacedInternshipAbroadAgreement",
            "Breaks"
          ],
          "type": "string",
          "x-nullable": false
        },
        "schoolInternshipAgreementId": {
          "format": "uuid",
          "type": "string"
        },
        "fguEudProgrammeAgreementId": {
          "format": "uuid",
          "type": "string"
        },
        "companyName": {
          "title": "String",
          "type": "string"
        },
        "companyAddress": {
          "title": "String",
          "type": "string"
        },
        "companyCountryCode": {
          "title": "String",
          "type": "string"
        },
        "signedDate": {
          "format": "date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000"
        },
        "receivedDate": {
          "format": "date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000"
        },
        "completedRegistrationDate": {
          "format": "date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000"
        },
        "creditPreApprovedDate": {
          "format": "date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000"
        },
        "creditFinalApprovedDate": {
          "format": "date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000"
        },
        "cvrNumber": {
          "title": "String",
          "type": "string"
        },
        "pNumber": {
          "title": "String",
          "type": "string"
        },
        "seNumber": {
          "title": "String",
          "type": "string"
        },
        "causeOfCompletion": {
          "enum": [
            "Terminated",
            "Finished",
            "StudentDeceased",
            "FinishedNotSkilled",
            "FinishedSkilled",
            "PresumedTerminated",
            "RepealedAfterTrialPeriodByMutualAgreement",
            "RepealedAfterTrialPeriodByStudent",
            "RepealedAfterTrialPeriodByCompany",
            "RepealedAfterTrialPeriodTerminatingPartyUnknown",
            "RepealedDuringTrial",
            "CompetenceAssessmentCompleted",
            "RepealedByProfessionalCommittee",
            "TerminatedDueToOtherReason",
            "TerminatedDueToOtherEducation",
            "TerminatedDueToPaidWork",
            "AgreementFulfilled",
            "LeaveOfAbsenceForInternshipAbroad",
            "PersonEvaluatedNotEmmaAfterStart",
            "RepealedBeforeStart"
          ],
          "type": "string"
        },
        "combinationAgreementId": {
          "format": "uuid",
          "type": "string"
        },
        "educationalAgreementType": {
          "enum": [
            "SubagreementInCombinationagreement",
            "SubagreementInPreparationforBasiceducationEud",
            "SubagreementInSchoolinternship",
            "ShortAgreement",
            "OrdinaryAgreement",
            "RemainingAgreement"
          ],
          "type": "string"
        },
        "supplementAgreementInformation": {
          "type": "array",
          "items": {
            "title": "SupplementAgreementInformation",
            "enum": [
              "VocationalSupplementWithExtension",
              "VocationalSupplementWithoutExtension",
              "Eux",
              "FirstAgreementAfterLostAgreementWithoutFault",
              "ExtendedDueToSicknessOrLeaveOfAbsenceOrSimilar",
              "GfPlus",
              "MustNotTriggerAubGrantHavredal",
              "MustNotTriggerStateGrants",
              "NewMasterApprenticeship",
              "StudySupplementWithExtension",
              "StudySupplementWithoutExtension",
              "LostWithoutFault",
              "UnspecifiedSupplementWithExtension",
              "UnspecifiedSupplementWithoutExtension",
              "AdmittedAfterLostEducationalAgreementWithoutFault"
            ],
            "type": "string",
            "x-nullable": false
          }
        },
        "agreementSchoolInstitutionNumber": {
          "title": "String",
          "type": "string"
        },
        "agreementDepartmentInstitutionNumber": {
          "title": "String",
          "type": "string"
        },
        "laidOutInternshipCenterInstitutionNumber": {
          "title": "String",
          "type": "string"
        },
        "laidOutInternshipCenterDepartmentInstitutionNumber": {
          "title": "String",
          "type": "string"
        }
      }
    },
    "StudentInternshipsExternalRequest": {
      "title": "StudentInternshipsExternalRequest",
      "description": "Get a list of students having school internships within the specified period",
      "required": [
        "periodFrom",
        "periodTo",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "periodFrom": {
          "format": "date",
          "title": "Date",
          "description": "Get all students school internships starting on or after this date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "periodTo": {
          "format": "date",
          "title": "Date",
          "description": "Get all students school internships ending on or before this date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "StudentInternshipsExternalResponse": {
      "title": "StudentInternshipsExternalResponse",
      "required": [
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of student",
          "type": "string",
          "x-nullable": false
        },
        "civilRegistrationNumber": {
          "title": "String",
          "description": "Students civil registration number",
          "type": "string"
        },
        "givenName": {
          "title": "String",
          "description": "Students given name",
          "type": "string"
        },
        "surname": {
          "title": "String",
          "description": "Students surname",
          "type": "string"
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When it was created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of student's information",
          "type": "string"
        },
        "writtenAgreements": {
          "description": "List of the students written internship agreements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentInternships_WrittenAgreementDto"
          }
        },
        "internshipPeriods": {
          "description": "List of the students internship periods as split by fx. school course participation periods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentInternships_InternshipPeriodDto"
          }
        }
      }
    },
    "StudentInternshipsExternalV2Request": {
      "title": "StudentInternshipsExternalV2Request",
      "description": "Get a list of students having school internships within the specified period",
      "required": [
        "periodFrom",
        "periodTo",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "periodFrom": {
          "format": "date",
          "title": "Date",
          "description": "Get all students school internships starting on or after this date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "periodTo": {
          "format": "date",
          "title": "Date",
          "description": "Get all students school internships ending on or before this date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "StudentInternshipsExternalV2Response": {
      "title": "StudentInternshipsExternalV2Response",
      "required": [
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of student.",
          "type": "string",
          "x-nullable": false
        },
        "civilRegistrationNumber": {
          "title": "String",
          "description": "Students civil registration number",
          "type": "string"
        },
        "givenName": {
          "title": "String",
          "description": "Students given name",
          "type": "string"
        },
        "surname": {
          "title": "String",
          "description": "Students surname",
          "type": "string"
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When it was created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of student's information",
          "type": "string"
        },
        "agreements": {
          "description": "List of the students internship agreements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentInternshipsAgreementDtoV2"
          }
        },
        "internshipPeriods": {
          "description": "List of the students internship periods as split by e.g school course participation periods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentInternshipsInternshipPeriodDtoV2"
          }
        }
      }
    },
    "StudentInternshipsInternshipPeriodDtoV2": {
      "title": "StudentInternshipsInternshipPeriodDtoV2",
      "required": [
        "agreementId",
        "endDate",
        "schoolInternshipType",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "agreementId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The agreement the internship period belongs to",
          "type": "string",
          "x-nullable": false
        },
        "schoolInternshipType": {
          "title": "SchoolInternshipType",
          "description": "The type of the school internships (SKPS/VFU/DEL)",
          "enum": [
            "SKPS",
            "DEL",
            "VFU"
          ],
          "type": "string",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the internship period",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date of the internship period",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When it was created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of the internship period",
          "type": "string"
        }
      }
    },
    "StudentInternships_InternshipPeriodDto": {
      "title": "StudentInternships_InternshipPeriodDto",
      "required": [
        "endDate",
        "schoolInternshipType",
        "startDate",
        "writtenAgreementId"
      ],
      "type": "object",
      "properties": {
        "writtenAgreementId": {
          "format": "uuid",
          "title": "Guid",
          "description": "The written agreement the internship period belongs to",
          "type": "string",
          "x-nullable": false
        },
        "schoolInternshipType": {
          "title": "SchoolInternshipType",
          "description": "The type of the school internships (SKPS/VFU/DEL)",
          "enum": [
            "SKPS",
            "DEL",
            "VFU"
          ],
          "type": "string",
          "x-nullable": false
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of the internship period",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date of the internship period",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "insertedAt": {
          "format": "date-time",
          "description": "When it was created",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Last update of the internship period",
          "type": "string"
        }
      }
    },
    "StudentInternships_WrittenAgreementDto": {
      "title": "StudentInternships_WrittenAgreementDto",
      "description": "A student's written agreement for school based internship",
      "required": [
        "endDate",
        "id",
        "startDate"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of the written agreement",
          "type": "string",
          "x-nullable": false
        },
        "agreementType": {
          "title": "String",
          "description": "The written agreement's internship type",
          "type": "string"
        },
        "agreementTypeDescription": {
          "title": "String",
          "description": "Textual description of the internship type",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Date",
          "description": "Start date of internship",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "endDate": {
          "format": "date",
          "title": "Date",
          "description": "End date for internship",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "placeOfInternshipName": {
          "title": "String",
          "description": "The name of the company where the internship takes place.",
          "type": "string"
        },
        "placeOfInternshipCvrNumber": {
          "title": "String",
          "description": "The CVR number of the company where the internship takes place.",
          "type": "string"
        },
        "placeOfInternshipEmail": {
          "title": "String",
          "description": "The contact email address of the company where the internship takes place.",
          "type": "string"
        },
        "placeOfInternshipSerialNumber": {
          "title": "String",
          "description": "The serial number of the internship.",
          "type": "string"
        },
        "seNumber": {
          "title": "String",
          "description": "The salary number for the internship.",
          "type": "string"
        },
        "placeOfInternshipAddress": {
          "title": "String",
          "description": "The address of the place of internship.",
          "type": "string"
        },
        "placeOfInternshipCity": {
          "title": "String",
          "description": "The city of the place of internship.",
          "type": "string"
        },
        "placeOfInternshipPostalCode": {
          "title": "String",
          "description": "The postal code of the place of internship.",
          "type": "string"
        }
      }
    },
    "StudentsInternshipAbsenceExternalRequest": {
      "title": "StudentsInternshipAbsenceExternalRequest",
      "description": "Get a list of students having absence on school internships within the specified period",
      "required": [
        "periodFrom",
        "periodTo",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "periodFrom": {
          "format": "date",
          "title": "Date",
          "description": "Get all students school internships absence starting on or after this date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "periodTo": {
          "format": "date",
          "title": "Date",
          "description": "Get all students school internships absence ending on or before this date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "schoolCode": {
          "title": "String",
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "StudentsInternshipAbsenceExternalResponse": {
      "title": "StudentsInternshipAbsenceExternalResponse",
      "required": [
        "studentId"
      ],
      "type": "object",
      "properties": {
        "studentId": {
          "format": "uuid",
          "title": "Guid",
          "description": "Id of student",
          "type": "string",
          "x-nullable": false
        },
        "civilRegistrationNumber": {
          "title": "String",
          "description": "Students civil registration number",
          "type": "string"
        },
        "givenName": {
          "title": "String",
          "description": "Students given name",
          "type": "string"
        },
        "surname": {
          "title": "String",
          "description": "Students surname",
          "type": "string"
        },
        "absence": {
          "description": "List of dates with absence the student has in the period specified in the request.\r\nDates where the student is present are not included.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentsInternshipAbsence_AbsenceDto"
          }
        }
      }
    },
    "StudentsInternshipAbsence_AbsenceDto": {
      "title": "StudentsInternshipAbsence_AbsenceDto",
      "required": [
        "absenceType",
        "date",
        "durationInMinutes",
        "isFullDayAbsence"
      ],
      "type": "object",
      "properties": {
        "date": {
          "format": "date",
          "title": "Date",
          "type": "string",
          "example": "2023-07-21T00:00:00.0000000",
          "x-nullable": false
        },
        "durationInMinutes": {
          "format": "int32",
          "title": "Int32",
          "type": "integer",
          "x-nullable": false
        },
        "isFullDayAbsence": {
          "title": "Boolean",
          "type": "boolean",
          "x-nullable": false
        },
        "absenceType": {
          "title": "AbsenceType",
          "enum": [
            "Illness",
            "IllegalAbsence",
            "LegalAbsence",
            "PaidVacation",
            "UnpaidVacation"
          ],
          "type": "string",
          "x-nullable": false
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}