// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Students.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// StudentExternalResponse
    /// </summary>
    /// <remarks>
    /// Model of the student.
    /// </remarks>
    public partial class StudentExternalResponse
    {
        /// <summary>
        /// Initializes a new instance of the StudentExternalResponse class.
        /// </summary>
        public StudentExternalResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StudentExternalResponse class.
        /// </summary>
        /// <param name="id">Guid</param>
        /// <param name="civilRegistrationNumber">String</param>
        /// <param name="protectedNameAndAddress">Boolean</param>
        /// <param name="reportToUniLogin">Boolean</param>
        /// <param name="createAdLogin">Boolean</param>
        /// <param name="guardians">The student's guardian(s).</param>
        /// <param name="studies">The studies (educations) the student is
        /// attending or has finished</param>
        /// <param name="givenName">String</param>
        /// <param name="surname">String</param>
        /// <param name="protectedGivenName">String</param>
        /// <param name="protectedSurname">String</param>
        /// <param name="careOfAddress">String</param>
        /// <param name="addressLine">String</param>
        /// <param name="place">String</param>
        /// <param name="city">String</param>
        /// <param name="postalCode">String</param>
        /// <param name="country">String</param>
        /// <param name="phoneNumber">String</param>
        /// <param name="email">String</param>
        /// <param name="privateEmail">String</param>
        /// <param name="uniLoginUsername">String</param>
        /// <param name="adUsername">String</param>
        /// <param name="insertedAt">When was student created</param>
        /// <param name="updatedAt">Last update of the student's
        /// information</param>
        public StudentExternalResponse(System.Guid id, string civilRegistrationNumber, bool protectedNameAndAddress, bool reportToUniLogin, bool createAdLogin, IList<StudentGuardian> guardians, IList<StudentStudy> studies, string givenName = default(string), string surname = default(string), string protectedGivenName = default(string), string protectedSurname = default(string), string careOfAddress = default(string), string addressLine = default(string), string place = default(string), string city = default(string), string postalCode = default(string), string country = default(string), string phoneNumber = default(string), string email = default(string), string privateEmail = default(string), string uniLoginUsername = default(string), string adUsername = default(string), System.DateTime? insertedAt = default(System.DateTime?), System.DateTime? updatedAt = default(System.DateTime?))
        {
            Id = id;
            CivilRegistrationNumber = civilRegistrationNumber;
            GivenName = givenName;
            Surname = surname;
            ProtectedGivenName = protectedGivenName;
            ProtectedSurname = protectedSurname;
            CareOfAddress = careOfAddress;
            AddressLine = addressLine;
            Place = place;
            City = city;
            PostalCode = postalCode;
            Country = country;
            ProtectedNameAndAddress = protectedNameAndAddress;
            PhoneNumber = phoneNumber;
            Email = email;
            PrivateEmail = privateEmail;
            UniLoginUsername = uniLoginUsername;
            ReportToUniLogin = reportToUniLogin;
            AdUsername = adUsername;
            CreateAdLogin = createAdLogin;
            Guardians = guardians;
            Studies = studies;
            InsertedAt = insertedAt;
            UpdatedAt = updatedAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets guid
        /// </summary>
        /// <remarks>
        /// Student's identifier.
        /// </remarks>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's civil registration (CPR) number.
        /// </remarks>
        [JsonProperty(PropertyName = "civilRegistrationNumber")]
        public string CivilRegistrationNumber { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's given name.
        /// </remarks>
        [JsonProperty(PropertyName = "givenName")]
        public string GivenName { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's surname.
        /// </remarks>
        [JsonProperty(PropertyName = "surname")]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Protected given name from national registry
        /// </remarks>
        [JsonProperty(PropertyName = "protectedGivenName")]
        public string ProtectedGivenName { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Protected surname from national registry
        /// </remarks>
        [JsonProperty(PropertyName = "protectedSurname")]
        public string ProtectedSurname { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The C/O address line of the student.
        /// </remarks>
        [JsonProperty(PropertyName = "careOfAddress")]
        public string CareOfAddress { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Full address including street, house-nr letter, etc. where the
        /// student lives.
        /// </remarks>
        [JsonProperty(PropertyName = "addressLine")]
        public string AddressLine { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The place of the student.
        /// </remarks>
        [JsonProperty(PropertyName = "place")]
        public string Place { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The city where the student lives.
        /// </remarks>
        [JsonProperty(PropertyName = "city")]
        public string City { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The matching postal code for the city.
        /// </remarks>
        [JsonProperty(PropertyName = "postalCode")]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The country where the student lives.
        /// </remarks>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Whether the name and address of the applicant are protected.
        /// </remarks>
        [JsonProperty(PropertyName = "protectedNameAndAddress")]
        public bool ProtectedNameAndAddress { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The student's phone number.
        /// </remarks>
        [JsonProperty(PropertyName = "phoneNumber")]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's e-mail address.
        /// </remarks>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's private e-mail address.
        /// </remarks>
        [JsonProperty(PropertyName = "privateEmail")]
        public string PrivateEmail { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's Unilogin ID.
        /// </remarks>
        [JsonProperty(PropertyName = "uniLoginUsername")]
        public string UniLoginUsername { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Flag denoting whether the student should be created as a user in
        /// UNI-Login
        /// </remarks>
        [JsonProperty(PropertyName = "reportToUniLogin")]
        public bool ReportToUniLogin { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Student's Active Directory username.
        /// </remarks>
        [JsonProperty(PropertyName = "adUsername")]
        public string AdUsername { get; set; }

        /// <summary>
        /// Gets or sets boolean
        /// </summary>
        /// <remarks>
        /// Flag denoting whether the student should be created in the local
        /// Active Directory
        /// </remarks>
        [JsonProperty(PropertyName = "createAdLogin")]
        public bool CreateAdLogin { get; set; }

        /// <summary>
        /// Gets or sets the student's guardian(s).
        /// </summary>
        [JsonProperty(PropertyName = "guardians")]
        public IList<StudentGuardian> Guardians { get; set; }

        /// <summary>
        /// Gets or sets the studies (educations) the student is attending or
        /// has finished
        /// </summary>
        [JsonProperty(PropertyName = "studies")]
        public IList<StudentStudy> Studies { get; set; }

        /// <summary>
        /// Gets or sets when was student created
        /// </summary>
        [JsonProperty(PropertyName = "insertedAt")]
        public System.DateTime? InsertedAt { get; set; }

        /// <summary>
        /// Gets or sets last update of the student's information
        /// </summary>
        [JsonProperty(PropertyName = "updatedAt")]
        public System.DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CivilRegistrationNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CivilRegistrationNumber");
            }
            if (Guardians == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Guardians");
            }
            if (Studies == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Studies");
            }
            if (CivilRegistrationNumber != null)
            {
                if (CivilRegistrationNumber.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CivilRegistrationNumber", 1);
                }
            }
            if (Guardians != null)
            {
                foreach (var element in Guardians)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Studies != null)
            {
                foreach (var element1 in Studies)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
