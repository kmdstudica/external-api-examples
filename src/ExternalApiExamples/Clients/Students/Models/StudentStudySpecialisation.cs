// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Students.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Student_Study_Specialisation
    /// </summary>
    public partial class StudentStudySpecialisation
    {
        /// <summary>
        /// Initializes a new instance of the StudentStudySpecialisation class.
        /// </summary>
        public StudentStudySpecialisation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StudentStudySpecialisation class.
        /// </summary>
        /// <param name="fromProperty">Date</param>
        /// <param name="name">String</param>
        /// <param name="to">End of specialisation</param>
        public StudentStudySpecialisation(System.DateTime fromProperty, string name = default(string), System.DateTime? to = default(System.DateTime?))
        {
            Name = name;
            FromProperty = fromProperty;
            To = to;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// The name of the specialisation.
        /// </remarks>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets date
        /// </summary>
        /// <remarks>
        /// Start of specialisation
        /// </remarks>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "from")]
        public System.DateTime FromProperty { get; set; }

        /// <summary>
        /// Gets or sets end of specialisation
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "to")]
        public System.DateTime? To { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
