// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Students.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Study_StudentType
    /// </summary>
    public partial class StudyStudentType
    {
        /// <summary>
        /// Initializes a new instance of the StudyStudentType class.
        /// </summary>
        public StudyStudentType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StudyStudentType class.
        /// </summary>
        /// <param name="id">The student type</param>
        /// <param name="validFrom">Date</param>
        /// <param name="name">String</param>
        /// <param name="validTo">The end date of the studenttype</param>
        public StudyStudentType(System.Guid id, System.DateTime validFrom, string name = default(string), System.DateTime? validTo = default(System.DateTime?))
        {
            Id = id;
            Name = name;
            ValidFrom = validFrom;
            ValidTo = validTo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the student type
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets string
        /// </summary>
        /// <remarks>
        /// Name of studet type (ElevType from UMO)
        /// </remarks>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets date
        /// </summary>
        /// <remarks>
        /// The date from which the studenttype is valid
        /// </remarks>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "validFrom")]
        public System.DateTime ValidFrom { get; set; }

        /// <summary>
        /// Gets or sets the end date of the studenttype
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "validTo")]
        public System.DateTime? ValidTo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
