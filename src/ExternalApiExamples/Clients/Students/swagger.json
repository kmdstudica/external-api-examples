{
  "swagger": "2.0",
  "info": {
    "title": "KMD Studica - Students",
    "version": "v1"
  },
  "host": "gateway.kmdlogic.io",
  "basePath": "/studica/students/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/ActiveStudentsExternal": {
      "get": {
        "tags": [
          "ActiveStudentsExternal"
        ],
        "operationId": "ActiveStudentsExternal_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StudentActiveOnOrAfterDate",
            "description": "Students must be active on the date or after this date\r\nThis parameter is required",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "PageNumber",
            "description": "The number of the page to return (1 is the first page).",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "Number of objects per page.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "minimum": 1.0
          },
          {
            "in": "query",
            "name": "InlineCount",
            "description": "A flag indicating if total number of items should be included.",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SchoolCode",
            "description": "The school code for which to get data.",
            "required": true,
            "type": "string",
            "maxLength": 6,
            "minLength": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_StudentExternalResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ActiveStudentsExternal"
        ],
        "operationId": "_ActiveStudentsExternal_Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ActiveStudentsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PagedResponse_StudentExternalResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/BulkStudentsExternal": {
      "post": {
        "tags": [
          "BulkStudentsExternal"
        ],
        "operationId": "BulkStudentsExternal_Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BulkStudentsExternalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/StudentExternalResponse"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    }
  },
  "definitions": {
    "PagedResponse_StudentExternalResponse": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Page of items",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentExternalResponse"
          },
          "readOnly": true
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of items",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "StudentExternalResponse": {
      "title": "StudentExternalResponse",
      "description": "Model of the student.",
      "required": [
        "id",
        "civilRegistrationNumber",
        "protectedNameAndAddress",
        "email",
        "reportToUniLogin",
        "createAdLogin",
        "guardians",
        "studies"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Student's identifier.",
          "type": "string",
          "x-nullable": false
        },
        "civilRegistrationNumber": {
          "description": "Student's civil registration (CPR) number.",
          "type": "string"
        },
        "givenName": {
          "description": "Student's given name.",
          "type": "string"
        },
        "surname": {
          "description": "Student's surname.",
          "type": "string"
        },
        "protectedGivenName": {
          "description": "Protected given name from national registry",
          "type": "string"
        },
        "protectedSurname": {
          "description": "Protected surname from national registry",
          "type": "string"
        },
        "careOfAddress": {
          "description": "The C/O address line of the student.",
          "type": "string"
        },
        "addressLine": {
          "description": "Full address including street, house-nr letter, etc. where the student lives.",
          "type": "string"
        },
        "place": {
          "description": "The place of the student.",
          "type": "string"
        },
        "city": {
          "description": "The city where the student lives.",
          "type": "string"
        },
        "postalCode": {
          "description": "The matching postal code for the city.",
          "type": "string"
        },
        "country": {
          "description": "The country where the student lives.",
          "type": "string"
        },
        "protectedNameAndAddress": {
          "description": "Whether the name and address of the applicant are protected.",
          "type": "boolean",
          "x-nullable": false
        },
        "phoneNumber": {
          "description": "The student's phone number.",
          "type": "string"
        },
        "email": {
          "description": "Student's e-mail address.",
          "type": "string"
        },
        "uniLoginUsername": {
          "description": "Student's Unilogin username.",
          "type": "string"
        },
        "reportToUniLogin": {
          "description": "Flag denoting whether the student should be created as a user in UNI-Login",
          "type": "boolean",
          "x-nullable": false
        },
        "adUsername": {
          "description": "Student's Active Directory username.",
          "type": "string"
        },
        "createAdLogin": {
          "description": "Flag denoting whether the student should be created in the local Active Directory",
          "type": "boolean",
          "x-nullable": false
        },
        "guardians": {
          "description": "The student's guardian(s).",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Student_Guardian"
          }
        },
        "studies": {
          "description": "The studies (educations) the student is attending or has finished",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Student_Study"
          }
        }
      }
    },
    "Student_Guardian": {
      "title": "Student_Guardian",
      "required": [
        "id",
        "protectedNameAndAddress"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string",
          "x-nullable": false
        },
        "civilRegistrationNumber": {
          "description": "The guardian's Civil Registration (CPR) number.",
          "type": "string"
        },
        "role": {
          "description": "The guardian's role towards the student.",
          "enum": [
            "Mother",
            "Father",
            "Other",
            "OfficialAuthority"
          ],
          "type": "string"
        },
        "givenName": {
          "description": "The guardian's first- and middle names.",
          "type": "string"
        },
        "surname": {
          "description": "The guardian's last name.",
          "type": "string"
        },
        "protectedGivenName": {
          "description": "The given name(s) of the guardian, as registered in the national registry.",
          "type": "string"
        },
        "protectedSurname": {
          "description": "The surname of the guardian, as registered in the national registry.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The guardian's phone number.",
          "type": "string"
        },
        "email": {
          "description": "The guardian's e-mail address.",
          "type": "string"
        },
        "careOfAddressLine": {
          "description": "The C/O address line of the guardian.",
          "type": "string"
        },
        "addressLine": {
          "description": "The guardian's full address including street, house-nr letter, etc.",
          "type": "string"
        },
        "place": {
          "description": "The place of the guardian.",
          "type": "string"
        },
        "city": {
          "description": "The city where the guardian lives.",
          "type": "string"
        },
        "postalCode": {
          "description": "The matching postal code for the city.",
          "type": "string"
        },
        "country": {
          "description": "The country where the guardian lives.",
          "type": "string"
        },
        "protectedNameAndAddress": {
          "description": "Whether the guardian has name and address protection.",
          "type": "boolean",
          "x-nullable": false
        }
      }
    },
    "Student_Study": {
      "title": "Student_Study",
      "required": [
        "id",
        "departmentId",
        "educationId",
        "studyStartDate",
        "studentTypes"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id of the study",
          "type": "string",
          "x-nullable": false
        },
        "departmentId": {
          "format": "uuid",
          "description": "Id of the department that student is affiliated to.",
          "type": "string",
          "x-nullable": false
        },
        "dsDepartmentNumber": {
          "description": "DS Department number that student is affiliated to.",
          "type": "string"
        },
        "educationId": {
          "format": "uuid",
          "description": "Id of the education (from UMO) that the study is linked to",
          "type": "string",
          "x-nullable": false
        },
        "educationName": {
          "description": "Name of the education from UMO",
          "type": "string"
        },
        "coesa": {
          "description": "CØSA number of education from UMO",
          "type": "string"
        },
        "educationVersion": {
          "description": "Education version from UMO",
          "type": "string"
        },
        "studyStartDate": {
          "format": "date",
          "description": "Study date of start.",
          "type": "string",
          "example": "2020-08-14T00:00:00.0000000",
          "x-nullable": false
        },
        "studyExpectedCompletionDate": {
          "format": "date",
          "description": "Expected completion date of study.",
          "type": "string",
          "example": "2020-08-14T00:00:00.0000000"
        },
        "studyEndDate": {
          "format": "date",
          "description": "Study end date",
          "type": "string",
          "example": "2020-08-14T00:00:00.0000000"
        },
        "studyEndCauseId": {
          "format": "uuid",
          "description": "Id of study end cause",
          "type": "string"
        },
        "studyEndCauseCode": {
          "description": "The UMO code for ending the study",
          "type": "string"
        },
        "studyEndCause": {
          "description": "UMO description for cause for study end.",
          "type": "string"
        },
        "studyCancellationCauseCode": {
          "description": "The cancellation code for ending the study.",
          "enum": [
            "StudyNotStarted",
            "Absence",
            "Illness",
            "EducationalRequirements",
            "ChangedStudy",
            "ChangedSchool",
            "ChangedSchoolAndChangedStudy",
            "Other",
            "Unknown",
            "Deceased",
            "WrittenAgreementTerminated",
            "CompletedGF2NotContinuing",
            "NotPassedFinalExam",
            "AdmissionExamNotPassedAndInterviewDenied",
            "AdmissionExamNotPassedAndDidNotShowAtInterview",
            "AdmissionInterviewNotPassed",
            "AdmissionExamPassedButInterviewDenied",
            "AdmissionExamPassedButDidNotShowAtInterview"
          ],
          "type": "string"
        },
        "studentTypes": {
          "description": "StudentTypes associated with the student.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Study_StudentType"
          }
        }
      }
    },
    "Study_StudentType": {
      "title": "Study_StudentType",
      "required": [
        "id",
        "validFrom"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The student type",
          "type": "string",
          "x-nullable": false
        },
        "name": {
          "description": "Name of studet type (ElevType from UMO)",
          "type": "string"
        },
        "validFrom": {
          "format": "date",
          "description": "The date from which the studenttype is valid",
          "type": "string",
          "example": "2020-08-14T00:00:00.0000000",
          "x-nullable": false
        },
        "validTo": {
          "format": "date",
          "description": "The end date of the studenttype",
          "type": "string",
          "example": "2020-08-14T00:00:00.0000000"
        }
      }
    },
    "ActiveStudentsExternalRequest": {
      "title": "ActiveStudentsExternalRequest",
      "description": "Returns a paged list of students for given criteria.",
      "required": [
        "studentActiveOnOrAfterDate",
        "pageNumber",
        "pageSize",
        "inlineCount",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "studentActiveOnOrAfterDate": {
          "format": "date",
          "description": "Students must be active on the date or after this date\r\nThis parameter is required",
          "type": "string",
          "example": "2020-08-14T00:00:00.0000000",
          "x-nullable": false
        },
        "pageNumber": {
          "format": "int32",
          "description": "The number of the page to return (1 is the first page).",
          "maximum": 2147483647.0,
          "minimum": 1.0,
          "type": "integer",
          "x-nullable": false
        },
        "pageSize": {
          "format": "int32",
          "description": "Number of objects per page.",
          "maximum": 1000.0,
          "minimum": 1.0,
          "type": "integer",
          "x-nullable": false
        },
        "inlineCount": {
          "description": "A flag indicating if total number of items should be included.",
          "default": true,
          "type": "boolean",
          "x-nullable": false
        },
        "schoolCode": {
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "BulkStudentsExternalRequest": {
      "title": "BulkStudentsExternalRequest",
      "description": "Returns a paged list of students for given criteria.",
      "required": [
        "studentIds",
        "schoolCode"
      ],
      "type": "object",
      "properties": {
        "studentIds": {
          "description": "Student ids for bulk query. Must contain 1 to 1000 elements",
          "maxLength": 1000,
          "minLength": 1,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "x-nullable": false
          }
        },
        "schoolCode": {
          "description": "The school code for which to get data.",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  }
}